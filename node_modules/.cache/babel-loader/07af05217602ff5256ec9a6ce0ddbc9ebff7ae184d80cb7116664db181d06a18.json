{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport { useNavigate } from 'react-router-dom';\nconst ThreeScene = () => {\n  _s();\n  const navigate = useNavigate();\n  const [noteText, setNoteText] = useState('');\n  const [showNote, setShowNote] = useState(false);\n  const scene = useRef(null);\n  const camera = useRef(null);\n  const renderer = useRef(null);\n  const cube = useRef(null);\n  const controls = useRef(null);\n  const notesDiv = useRef(null);\n  const checkpoints = [0, 5, 8, 12, 30, 33];\n  const notes = [\"Checkpoint 1: Move the right arrow key!\", \"1\", \"2\", \"3\", \"Checkpoint 2: Done Schooling from kendriya vidyalaya Sangathan, with lots of happy memories and Friends!\", \"Click to Enter in the school!\"];\n  let checkpointIndex = 0;\n  let xMovement = 0;\n  const xdistance = 3;\n  const textMeshes = [];\n  const schools = [];\n  const logos = [];\n  const displayNote = text => {\n    setNoteText(text);\n    setShowNote(true);\n    setTimeout(() => setShowNote(false), 2000);\n  };\n  useEffect(() => {\n    const initScene = () => {\n      scene.current = new THREE.Scene();\n      camera.current = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      renderer.current = new THREE.WebGLRenderer();\n      renderer.current.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.current.domElement);\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({\n        color: 0xffffff\n      });\n      cube.current = new THREE.Mesh(geometry, material);\n      scene.current.add(cube.current);\n      controls.current = new OrbitControls(camera.current, renderer.current.domElement);\n      controls.current.enableDamping = true;\n      controls.current.dampingFactor = 0.25;\n      controls.current.screenSpacePanning = false;\n      controls.current.maxPolarAngle = Math.PI / 2;\n      camera.current.position.z = 5;\n\n      // const notesDiv = document.createElement('notes');\n      // notesDiv.style.position = 'absolute';\n      // notesDiv.style.textAlign = 'center';\n      // notesDiv.style.top = '30px';\n      // notesDiv.style.padding = '10px';\n      // notesDiv.style.border = '2px solid white';\n      // notesDiv.style.backgroundColor = 'black';\n      // notesDiv.style.zIndex = '1000';\n      // document.body.appendChild(notesDiv);\n\n      // Store the reference\n      // notesDiv.current = notesDiv;\n\n      // notesDiv.current = document.createElement('div');\n      // notesDiv.current.style.position = 'absolute';\n      // notesDiv.current.style.textAlign = 'center';\n      // notesDiv.current.style.top = '30px';\n      // notesDiv.current.style.padding = '10px';\n      // notesDiv.current.style.border = '2px solid white';\n      // notesDiv.current.style.backgroundColor = 'black';\n      // notesDiv.current.style.zIndex = '1000';\n      // notesDiv.current.style.display = 'none';\n      // document.body.appendChild(notesDiv.current);\n\n      document.addEventListener('mousedown', onDocumentMouseDown, false);\n      document.addEventListener('keydown', onKeyDown);\n      createText();\n      createSchools();\n      createSun();\n    };\n    const animate = () => {\n      if (!scene.current || !camera.current || !renderer.current) {\n        return;\n      }\n      const animationId = requestAnimationFrame(animate);\n      if (controls.current) {\n        controls.current.update();\n      }\n      if (cube.current) {\n        cube.current.rotation.z += 0.0005;\n        cube.current.rotation.y += 0.01;\n      }\n      renderer.current.render(scene.current, camera.current);\n      return () => {\n        cancelAnimationFrame(animationId);\n      };\n    };\n    const onKeyDown = event => {\n      if (event.code === 'ArrowRight') {\n        xMovement -= 3;\n        handleArrowRight();\n      } else if (event.code === 'ArrowLeft') {\n        xMovement += 3;\n        handleArrowLeft();\n      }\n    };\n    const handleArrowRight = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n      if (checkpointIndex < checkpoints.length && xMovement >= checkpoints[checkpointIndex]) {\n        // displayCheckpointNote();\n        displayNote(notes[checkpointIndex]);\n        checkpointIndex++;\n      }\n      moveBackgroundElements(-xdistance);\n    };\n    const handleArrowLeft = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n      if (checkpointIndex > 0 && xMovement < checkpoints[checkpointIndex - 1] && checkpointIndex > 4) {\n        checkpointIndex--;\n        // displayCheckpointNote();\n      }\n      moveBackgroundElements(xdistance);\n    };\n    const moveBackgroundElements = distance => {\n      textMeshes.forEach(textMesh => {\n        textMesh.position.x += distance;\n      });\n      schools.forEach(school => {\n        school.position.x += distance;\n      });\n      logos.forEach(logo => {\n        logo.position.x += distance;\n      });\n    };\n\n    // const displayCheckpointNote = () => {\n    //   if (notesDiv.current) {\n    //     notesDiv.current.innerText = notes[checkpointIndex];\n    //     notesDiv.current.style.display = 'block';\n    //     setTimeout(() => {\n    //       notesDiv.current.style.display = 'none';\n    //     }, 2000);\n    //   }\n    // };\n\n    const onDocumentMouseDown = event => {\n      event.preventDefault();\n      const raycaster = new THREE.Raycaster();\n      const mouse = new THREE.Vector2();\n      mouse.x = event.clientX / window.innerWidth * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n      raycaster.setFromCamera(mouse, camera.current);\n      const intersects = raycaster.intersectObjects(textMeshes);\n      if (intersects.length > 0) {\n        const intersectedObject = intersects[0].object;\n        if (intersectedObject.userData.url) {\n          navigate(intersectedObject.userData.url);\n        } else {\n          alert('Slide');\n        }\n      }\n    };\n    const handleResize = () => {\n      if (camera.current && renderer.current) {\n        camera.current.aspect = window.innerWidth / window.innerHeight;\n        camera.current.updateProjectionMatrix();\n        renderer.current.setSize(window.innerWidth, window.innerHeight);\n      }\n    };\n    initScene();\n    const cleanupAnimation = animate();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      if (cleanupAnimation) {\n        cleanupAnimation();\n      }\n      if (controls.current) {\n        controls.current.dispose();\n      }\n      if (renderer.current) {\n        renderer.current.dispose();\n      }\n      if (scene.current) {\n        scene.current.clear();\n      }\n      if (renderer.current && renderer.current.domElement) {\n        document.body.removeChild(renderer.current.domElement);\n      }\n      if (notesDiv.current) {\n        document.body.removeChild(notesDiv.current);\n      }\n      document.removeEventListener('mousedown', onDocumentMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Function to create text labels\n  const createText = () => {\n    const loader = new FontLoader();\n    loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n      const createTextMesh = (text, x, y, z, size, color, url) => {\n        const textGeometry = new TextGeometry(text, {\n          font: font,\n          size: size,\n          height: 0.1,\n          curveSegments: 2,\n          bevelEnabled: false\n        });\n        const textMaterial = new THREE.MeshBasicMaterial({\n          color: color\n        });\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n        textMesh.position.set(x, y, z);\n        textMesh.userData.url = url;\n        scene.current.add(textMesh);\n        textMeshes.push(textMesh);\n      };\n\n      // Example text labels\n      createTextMesh('Welcome to O-rang', -6, 5, -5, 1, 0xffffff);\n      createTextMesh(\"Hello, I'm Swati\", -4.3, 2, -5, 1, 0xffffff);\n      createTextMesh('A passionate developer and tech enthusiast', -6.4, -3, -5, 0.5, 0xffffff);\n      createTextMesh('Let\\'s move forward . . .', -3, -4.2, -5, 0.5, 0xffffff);\n      createTextMesh(\"Kendriya Vidyalaya Gorakhpur\", 30, -3, -5, .5, 0x7B0000, \"/school\");\n    });\n  };\n\n  // Function to create schools/buildings\n  const createSchools = () => {\n    function createSchool(x, y, z) {\n      // Function to create a building\n      function createBuilding(xOffset, yOffset, zOffset) {\n        const building = new THREE.Group();\n\n        // Create the walls\n        const wallGeometry = new THREE.BoxGeometry(5, 5, 1.5);\n        const wallMaterial = new THREE.MeshBasicMaterial({\n          color: 0xffffff\n        }); // White color\n        const walls = new THREE.Mesh(wallGeometry, wallMaterial);\n        walls.position.set(xOffset, yOffset, zOffset);\n\n        // Create windows\n        const windowGeometry = new THREE.BoxGeometry(0.5, 0.7, 0.1);\n        const windowMaterial = new THREE.MeshBasicMaterial({\n          color: 0x444444\n        });\n        const windows = [{\n          x: -1,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 0,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 1,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: -1,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 0,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 1,\n          y: -1,\n          z: 1.01\n        }, {\n          x: -2,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: -2,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 2,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 2,\n          y: -1,\n          z: 1.01\n        }];\n        windows.forEach(pos => {\n          const windowMesh = new THREE.Mesh(windowGeometry, windowMaterial);\n          windowMesh.position.set(xOffset + pos.x, yOffset + pos.y, zOffset + pos.z);\n          building.add(windowMesh);\n        });\n\n        // Create horizontal strips\n        const stripGeometry = new THREE.BoxGeometry(5, 0.3, 1.8);\n        const stripMaterial = new THREE.MeshBasicMaterial({\n          color: 0x04192\n        });\n        const strip1 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip1.position.set(xOffset, yOffset + 1.5, zOffset);\n        const strip2 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip2.position.set(xOffset, yOffset - 0.2, zOffset);\n\n        // Add components to the building group\n        building.add(walls);\n        building.add(strip1);\n        building.add(strip2);\n        return building;\n      }\n\n      // Create two buildings\n      const building1 = createBuilding(x, y, z);\n      const building2 = createBuilding(x, y + 1, z * 2);\n\n      // Add the buildings to the scene\n      scene.current.add(building1);\n      scene.current.add(building2);\n      schools.push(building1, building2);\n    }\n\n    // Example position\n    createSchool(25, -3, -5);\n  };\n\n  // Function to create the sun\n  const createSun = () => {\n    function createSun(x, y, z) {\n      const sunGroup = new THREE.Group();\n\n      // Create the sun (half circle)\n      const sunGeometry = new THREE.CircleGeometry(1, 32, 0, Math.PI);\n      const sunMaterial = new THREE.MeshBasicMaterial({\n        color: 0xFFFF00\n      }); // Yellow color\n      const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n      sun.position.set(x, y, z);\n      sunGroup.add(sun);\n\n      // Create rays\n      const rayMaterial = new THREE.LineBasicMaterial({\n        color: 0xd34000\n      }); // Yellow color\n      for (let i = 0; i <= Math.PI; i += Math.PI / 11) {\n        const rayGeometry = new THREE.BufferGeometry();\n        const vertices = new Float32Array([x + Math.cos(i) * 2, y + Math.sin(i) * 2, z, x + Math.cos(i) * 3, y + Math.sin(i) * 3, z]);\n        rayGeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        const ray = new THREE.Line(rayGeometry, rayMaterial);\n        sunGroup.add(ray);\n      }\n      // Add the sunGroup to the scene\n      scene.current.add(sunGroup);\n      logos.push(sunGroup);\n    }\n    createSun(34, -2, -5);\n  };\n  return null;\n};\n_s(ThreeScene, \"ejpPp07pWgjQrz8h9hUO4qBJbfk=\", false, function () {\n  return [useNavigate];\n});\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["useEffect","useState","useRef","THREE","OrbitControls","FontLoader","TextGeometry","useNavigate","ThreeScene","_s","navigate","noteText","setNoteText","showNote","setShowNote","scene","camera","renderer","cube","controls","notesDiv","checkpoints","notes","checkpointIndex","xMovement","xdistance","textMeshes","schools","logos","displayNote","text","setTimeout","initScene","current","Scene","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","Mesh","add","enableDamping","dampingFactor","screenSpacePanning","maxPolarAngle","Math","PI","position","z","addEventListener","onDocumentMouseDown","onKeyDown","createText","createSchools","createSun","animate","animationId","requestAnimationFrame","update","rotation","y","render","cancelAnimationFrame","event","code","handleArrowRight","handleArrowLeft","scale","x","sin","cos","length","moveBackgroundElements","distance","forEach","textMesh","school","logo","preventDefault","raycaster","Raycaster","mouse","Vector2","clientX","clientY","setFromCamera","intersects","intersectObjects","intersectedObject","object","userData","url","alert","handleResize","aspect","updateProjectionMatrix","cleanupAnimation","dispose","clear","removeChild","removeEventListener","loader","load","font","createTextMesh","size","textGeometry","height","curveSegments","bevelEnabled","textMaterial","set","push","createSchool","createBuilding","xOffset","yOffset","zOffset","building","Group","wallGeometry","wallMaterial","walls","windowGeometry","windowMaterial","windows","pos","windowMesh","stripGeometry","stripMaterial","strip1","strip2","building1","building2","sunGroup","sunGeometry","CircleGeometry","sunMaterial","sun","rayMaterial","LineBasicMaterial","i","rayGeometry","BufferGeometry","vertices","Float32Array","setAttribute","BufferAttribute","ray","Line","_c","$RefreshReg$"],"sources":["/Users/swati/Documents/Portfoilo/reactthree/src/components/app.js"],"sourcesContent":["import  { useEffect,useState, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport { useNavigate } from 'react-router-dom';\n\nconst ThreeScene = () => {\n  const navigate = useNavigate();\n\n  const [noteText, setNoteText] = useState('');\n  const [showNote, setShowNote] = useState(false);\n\n  const scene = useRef(null);\n  const camera = useRef(null);\n  const renderer = useRef(null);\n  const cube = useRef(null);\n  const controls = useRef(null);\n  const notesDiv = useRef(null);\n\n  const checkpoints = [0, 5, 8, 12, 30, 33];\n  const notes = [\n    \"Checkpoint 1: Move the right arrow key!\",\n    \"1\", \"2\", \"3\",\n    \"Checkpoint 2: Done Schooling from kendriya vidyalaya Sangathan, with lots of happy memories and Friends!\",\n    \"Click to Enter in the school!\"\n  ];\n\n  let checkpointIndex = 0;\n  let xMovement = 0;\n  const xdistance = 3;\n \n  const textMeshes = [];\n  const schools = [];\n  const logos = [];\n\n  const displayNote = (text) => {\n    setNoteText(text);\n    setShowNote(true);\n    setTimeout(() => setShowNote(false), 2000);\n  };\n  useEffect(() => {\n    const initScene = () => {\n      scene.current = new THREE.Scene();\n      camera.current = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      renderer.current = new THREE.WebGLRenderer();\n      renderer.current.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.current.domElement);\n\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n      cube.current = new THREE.Mesh(geometry, material);\n      scene.current.add(cube.current);\n      \n\n      controls.current = new OrbitControls(camera.current, renderer.current.domElement);\n      controls.current.enableDamping = true;\n      controls.current.dampingFactor = 0.25;\n      controls.current.screenSpacePanning = false;\n      controls.current.maxPolarAngle = Math.PI / 2;\n\n      camera.current.position.z = 5;\n\n      // const notesDiv = document.createElement('notes');\n      // notesDiv.style.position = 'absolute';\n      // notesDiv.style.textAlign = 'center';\n      // notesDiv.style.top = '30px';\n      // notesDiv.style.padding = '10px';\n      // notesDiv.style.border = '2px solid white';\n      // notesDiv.style.backgroundColor = 'black';\n      // notesDiv.style.zIndex = '1000';\n      // document.body.appendChild(notesDiv);\n\n      // Store the reference\n      // notesDiv.current = notesDiv;\n\n      // notesDiv.current = document.createElement('div');\n      // notesDiv.current.style.position = 'absolute';\n      // notesDiv.current.style.textAlign = 'center';\n      // notesDiv.current.style.top = '30px';\n      // notesDiv.current.style.padding = '10px';\n      // notesDiv.current.style.border = '2px solid white';\n      // notesDiv.current.style.backgroundColor = 'black';\n      // notesDiv.current.style.zIndex = '1000';\n      // notesDiv.current.style.display = 'none';\n      // document.body.appendChild(notesDiv.current);\n\n      document.addEventListener('mousedown', onDocumentMouseDown, false);\n      document.addEventListener('keydown', onKeyDown);\n      \n      createText();\n      createSchools();\n      createSun();\n    };\n\n    const animate = () => {\n      if (!scene.current || !camera.current || !renderer.current) {\n        return;\n      }\n\n      const animationId = requestAnimationFrame(animate);\n\n      if (controls.current) {\n        controls.current.update();\n      }\n\n      if (cube.current) {\n        cube.current.rotation.z += 0.0005;\n        cube.current.rotation.y += 0.01;\n      }\n\n      renderer.current.render(scene.current, camera.current);\n\n      return () => {\n        cancelAnimationFrame(animationId);\n      };\n    };\n\n    const onKeyDown = (event) => {\n      if (event.code === 'ArrowRight') {\n        xMovement -= 3;\n        handleArrowRight();\n      } else if (event.code === 'ArrowLeft') {\n        xMovement += 3;\n        handleArrowLeft();\n      }\n    };\n    \n    const handleArrowRight = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n\n      if (checkpointIndex < checkpoints.length && xMovement >= checkpoints[checkpointIndex]) {\n        // displayCheckpointNote();\n        displayNote(notes[checkpointIndex]);\n        checkpointIndex++;\n      }\n\n      moveBackgroundElements(-xdistance);\n    };\n\n    const handleArrowLeft = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n\n      if (checkpointIndex > 0 && xMovement < checkpoints[checkpointIndex - 1] && checkpointIndex > 4) {\n       \n        checkpointIndex--;\n        // displayCheckpointNote();\n      }\n\n      moveBackgroundElements(xdistance);\n    };\n\n    const moveBackgroundElements = (distance) => {\n      textMeshes.forEach(textMesh => {\n        textMesh.position.x += distance;\n      });\n      schools.forEach(school => {\n        school.position.x += distance;\n      });\n\n      logos.forEach(logo=>{\n        logo.position.x +=distance;\n      })\n    };\n\n    // const displayCheckpointNote = () => {\n    //   if (notesDiv.current) {\n    //     notesDiv.current.innerText = notes[checkpointIndex];\n    //     notesDiv.current.style.display = 'block';\n    //     setTimeout(() => {\n    //       notesDiv.current.style.display = 'none';\n    //     }, 2000);\n    //   }\n    // };\n\n    const onDocumentMouseDown = (event) => {\n      event.preventDefault();\n\n      const raycaster = new THREE.Raycaster();\n      const mouse = new THREE.Vector2();\n\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n      raycaster.setFromCamera(mouse, camera.current);\n\n      const intersects = raycaster.intersectObjects(textMeshes);\n      if (intersects.length > 0) {\n        const intersectedObject = intersects[0].object;\n        if (intersectedObject.userData.url) {\n          navigate(intersectedObject.userData.url);\n        }\n        else{\n          alert('Slide');\n        }\n      }\n    };\n\n    const handleResize = () => {\n      if (camera.current && renderer.current) {\n        camera.current.aspect = window.innerWidth / window.innerHeight;\n        camera.current.updateProjectionMatrix();\n        renderer.current.setSize(window.innerWidth, window.innerHeight);\n      }\n    };\n\n    initScene();\n    const cleanupAnimation = animate();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      if (cleanupAnimation) {\n        cleanupAnimation();\n      }\n      if (controls.current) {\n        controls.current.dispose();\n      }\n      if (renderer.current) {\n        renderer.current.dispose();\n      }\n      if (scene.current) {\n        scene.current.clear();\n      }\n      if (renderer.current && renderer.current.domElement) {\n        document.body.removeChild(renderer.current.domElement);\n      }\n      if (notesDiv.current) {\n        document.body.removeChild(notesDiv.current);\n      }\n      document.removeEventListener('mousedown', onDocumentMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Function to create text labels\n  const createText = () => {\n    const loader = new FontLoader();\n    loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n      const createTextMesh = (text, x, y, z, size, color,url) => {\n        const textGeometry = new TextGeometry(text, {\n          font: font,\n          size: size,\n          height: 0.1,\n          curveSegments: 2,\n          bevelEnabled: false\n        });\n        const textMaterial = new THREE.MeshBasicMaterial({ color: color });\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n        textMesh.position.set(x, y, z);\n        textMesh.userData.url = url;\n        scene.current.add(textMesh);\n        textMeshes.push(textMesh);\n      };\n\n      // Example text labels\n      createTextMesh('Welcome to O-rang', -6, 5, -5, 1, 0xffffff);\n      createTextMesh(\"Hello, I'm Swati\", -4.3, 2, -5, 1, 0xffffff);\n      createTextMesh('A passionate developer and tech enthusiast', -6.4, -3, -5, 0.5, 0xffffff);\n      createTextMesh('Let\\'s move forward . . .', -3, -4.2, -5, 0.5, 0xffffff);\n      createTextMesh(\"Kendriya Vidyalaya Gorakhpur\",  30, -3, -5,  .5, 0x7B0000, \"/school\");\n    });\n  };\n\n  // Function to create schools/buildings\n  const createSchools = () => {\n    function createSchool(x, y, z) {\n      // Function to create a building\n      function createBuilding(xOffset, yOffset, zOffset) {\n        const building = new THREE.Group();\n\n        // Create the walls\n        const wallGeometry = new THREE.BoxGeometry(5, 5, 1.5);\n        const wallMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff }); // White color\n        const walls = new THREE.Mesh(wallGeometry, wallMaterial);\n        walls.position.set(xOffset, yOffset, zOffset);\n\n        // Create windows\n        const windowGeometry = new THREE.BoxGeometry(0.5, 0.7, 0.1);\n        const windowMaterial = new THREE.MeshBasicMaterial({ color: 0x444444 });\n        const windows = [\n          { x: -1, y: 0.8, z: 1.01 },\n          { x: 0, y: 0.8, z: 1.01 },\n          { x: 1, y: 0.8, z: 1.01 },\n          { x: -1, y: -1, z: 1.01 },\n          { x: 0, y: -1, z: 1.01 },\n          { x: 1, y: -1, z: 1.01 },\n          { x: -2, y: 0.8, z: 1.01 },\n          { x: -2, y: -1, z: 1.01 },\n          { x: 2, y: 0.8, z: 1.01 },\n          { x: 2, y: -1, z: 1.01 },\n        ];\n\n        windows.forEach((pos) => {\n          const windowMesh = new THREE.Mesh(windowGeometry, windowMaterial);\n          windowMesh.position.set(xOffset + pos.x, yOffset + pos.y, zOffset + pos.z);\n          building.add(windowMesh);\n        });\n\n        // Create horizontal strips\n        const stripGeometry = new THREE.BoxGeometry(5, 0.3, 1.8);\n        const stripMaterial = new THREE.MeshBasicMaterial({ color: 0x04192 });\n\n        const strip1 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip1.position.set(xOffset, yOffset + 1.5, zOffset);\n\n        const strip2 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip2.position.set(xOffset, yOffset - 0.2, zOffset);\n\n        // Add components to the building group\n        building.add(walls);\n        building.add(strip1);\n        building.add(strip2);\n\n        return building;\n      }\n\n      // Create two buildings\n      const building1 = createBuilding(x, y, z);\n      const building2 = createBuilding(x , y +1 , z*2);\n\n      // Add the buildings to the scene\n      scene.current.add(building1);\n      scene.current.add(building2);\n\n      schools.push(building1, building2);\n    }\n\n    // Example position\n    createSchool(25, -3, -5);\n  };\n\n  // Function to create the sun\n  const createSun = () => {\n    function createSun(x,y,z){\n      const sunGroup = new THREE.Group();\n\n      // Create the sun (half circle)\n      const sunGeometry = new THREE.CircleGeometry(1, 32, 0, Math.PI);\n      const sunMaterial = new THREE.MeshBasicMaterial({ color: 0xFFFF00 }); // Yellow color\n      const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n      sun.position.set(x,y,z);\n      sunGroup.add(sun);\n\n      // Create rays\n      const rayMaterial = new THREE.LineBasicMaterial({ color: 0xd34000 }); // Yellow color\n      for (let i = 0; i <= Math.PI; i += Math.PI / 11) {\n        const rayGeometry = new THREE.BufferGeometry();\n        const vertices = new Float32Array([\n          x+Math.cos(i) * 2, y+Math.sin(i) * 2, z,\n          x+Math.cos(i) * 3, y+Math.sin(i) * 3, z\n        ]);\n        rayGeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        const ray = new THREE.Line(rayGeometry, rayMaterial);\n        sunGroup.add(ray);\n      }\n      // Add the sunGroup to the scene\n      scene.current.add(sunGroup);\n      logos.push(sunGroup);\n    }\n    createSun(34,-2,-5);\n  };\n\n  return null;\n};\n\nexport default ThreeScene;\n\n"],"mappings":";AAAA,SAAUA,SAAS,EAACC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,2CAA2C;AACzE,SAASC,UAAU,QAAQ,0CAA0C;AACrE,SAASC,YAAY,QAAQ,+CAA+C;AAC5E,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMc,KAAK,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC1B,MAAMc,MAAM,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMe,QAAQ,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMgB,IAAI,GAAGhB,MAAM,CAAC,IAAI,CAAC;EACzB,MAAMiB,QAAQ,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMkB,QAAQ,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMmB,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACzC,MAAMC,KAAK,GAAG,CACZ,yCAAyC,EACzC,GAAG,EAAE,GAAG,EAAE,GAAG,EACb,0GAA0G,EAC1G,+BAA+B,CAChC;EAED,IAAIC,eAAe,GAAG,CAAC;EACvB,IAAIC,SAAS,GAAG,CAAC;EACjB,MAAMC,SAAS,GAAG,CAAC;EAEnB,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,KAAK,GAAG,EAAE;EAEhB,MAAMC,WAAW,GAAIC,IAAI,IAAK;IAC5BlB,WAAW,CAACkB,IAAI,CAAC;IACjBhB,WAAW,CAAC,IAAI,CAAC;IACjBiB,UAAU,CAAC,MAAMjB,WAAW,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAC5C,CAAC;EACDd,SAAS,CAAC,MAAM;IACd,MAAMgC,SAAS,GAAGA,CAAA,KAAM;MACtBjB,KAAK,CAACkB,OAAO,GAAG,IAAI9B,KAAK,CAAC+B,KAAK,CAAC,CAAC;MACjClB,MAAM,CAACiB,OAAO,GAAG,IAAI9B,KAAK,CAACgC,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;MACnGrB,QAAQ,CAACgB,OAAO,GAAG,IAAI9B,KAAK,CAACoC,aAAa,CAAC,CAAC;MAC5CtB,QAAQ,CAACgB,OAAO,CAACO,OAAO,CAACJ,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;MAC/DG,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC1B,QAAQ,CAACgB,OAAO,CAACW,UAAU,CAAC;MAEtD,MAAMC,QAAQ,GAAG,IAAI1C,KAAK,CAAC2C,WAAW,CAAC,CAAC;MACxC,MAAMC,QAAQ,GAAG,IAAI5C,KAAK,CAAC6C,iBAAiB,CAAC;QAAEC,KAAK,EAAE;MAAS,CAAC,CAAC;MACjE/B,IAAI,CAACe,OAAO,GAAG,IAAI9B,KAAK,CAAC+C,IAAI,CAACL,QAAQ,EAAEE,QAAQ,CAAC;MACjDhC,KAAK,CAACkB,OAAO,CAACkB,GAAG,CAACjC,IAAI,CAACe,OAAO,CAAC;MAG/Bd,QAAQ,CAACc,OAAO,GAAG,IAAI7B,aAAa,CAACY,MAAM,CAACiB,OAAO,EAAEhB,QAAQ,CAACgB,OAAO,CAACW,UAAU,CAAC;MACjFzB,QAAQ,CAACc,OAAO,CAACmB,aAAa,GAAG,IAAI;MACrCjC,QAAQ,CAACc,OAAO,CAACoB,aAAa,GAAG,IAAI;MACrClC,QAAQ,CAACc,OAAO,CAACqB,kBAAkB,GAAG,KAAK;MAC3CnC,QAAQ,CAACc,OAAO,CAACsB,aAAa,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC;MAE5CzC,MAAM,CAACiB,OAAO,CAACyB,QAAQ,CAACC,CAAC,GAAG,CAAC;;MAE7B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEAlB,QAAQ,CAACmB,gBAAgB,CAAC,WAAW,EAAEC,mBAAmB,EAAE,KAAK,CAAC;MAClEpB,QAAQ,CAACmB,gBAAgB,CAAC,SAAS,EAAEE,SAAS,CAAC;MAE/CC,UAAU,CAAC,CAAC;MACZC,aAAa,CAAC,CAAC;MACfC,SAAS,CAAC,CAAC;IACb,CAAC;IAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpB,IAAI,CAACnD,KAAK,CAACkB,OAAO,IAAI,CAACjB,MAAM,CAACiB,OAAO,IAAI,CAAChB,QAAQ,CAACgB,OAAO,EAAE;QAC1D;MACF;MAEA,MAAMkC,WAAW,GAAGC,qBAAqB,CAACF,OAAO,CAAC;MAElD,IAAI/C,QAAQ,CAACc,OAAO,EAAE;QACpBd,QAAQ,CAACc,OAAO,CAACoC,MAAM,CAAC,CAAC;MAC3B;MAEA,IAAInD,IAAI,CAACe,OAAO,EAAE;QAChBf,IAAI,CAACe,OAAO,CAACqC,QAAQ,CAACX,CAAC,IAAI,MAAM;QACjCzC,IAAI,CAACe,OAAO,CAACqC,QAAQ,CAACC,CAAC,IAAI,IAAI;MACjC;MAEAtD,QAAQ,CAACgB,OAAO,CAACuC,MAAM,CAACzD,KAAK,CAACkB,OAAO,EAAEjB,MAAM,CAACiB,OAAO,CAAC;MAEtD,OAAO,MAAM;QACXwC,oBAAoB,CAACN,WAAW,CAAC;MACnC,CAAC;IACH,CAAC;IAED,MAAML,SAAS,GAAIY,KAAK,IAAK;MAC3B,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;QAC/BnD,SAAS,IAAI,CAAC;QACdoD,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM,IAAIF,KAAK,CAACC,IAAI,KAAK,WAAW,EAAE;QACrCnD,SAAS,IAAI,CAAC;QACdqD,eAAe,CAAC,CAAC;MACnB;IACF,CAAC;IAED,MAAMD,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,IAAI1D,IAAI,CAACe,OAAO,EAAE;QAChBf,IAAI,CAACe,OAAO,CAAC6C,KAAK,CAACC,CAAC,GAAG,CAAC,GAAGvB,IAAI,CAACwB,GAAG,CAACxD,SAAS,CAAC,GAAG,GAAG;QACpDN,IAAI,CAACe,OAAO,CAAC6C,KAAK,CAACP,CAAC,GAAG,CAAC,GAAGf,IAAI,CAACyB,GAAG,CAACzD,SAAS,CAAC,GAAG,GAAG;QACpDN,IAAI,CAACe,OAAO,CAAC6C,KAAK,CAACnB,CAAC,GAAG,CAAC,GAAGH,IAAI,CAACwB,GAAG,CAACxD,SAAS,CAAC,GAAG,GAAG;MACtD;MAEA,IAAID,eAAe,GAAGF,WAAW,CAAC6D,MAAM,IAAI1D,SAAS,IAAIH,WAAW,CAACE,eAAe,CAAC,EAAE;QACrF;QACAM,WAAW,CAACP,KAAK,CAACC,eAAe,CAAC,CAAC;QACnCA,eAAe,EAAE;MACnB;MAEA4D,sBAAsB,CAAC,CAAC1D,SAAS,CAAC;IACpC,CAAC;IAED,MAAMoD,eAAe,GAAGA,CAAA,KAAM;MAC5B,IAAI3D,IAAI,CAACe,OAAO,EAAE;QAChBf,IAAI,CAACe,OAAO,CAAC6C,KAAK,CAACC,CAAC,GAAG,CAAC,GAAGvB,IAAI,CAACwB,GAAG,CAACxD,SAAS,CAAC,GAAG,GAAG;QACpDN,IAAI,CAACe,OAAO,CAAC6C,KAAK,CAACP,CAAC,GAAG,CAAC,GAAGf,IAAI,CAACyB,GAAG,CAACzD,SAAS,CAAC,GAAG,GAAG;QACpDN,IAAI,CAACe,OAAO,CAAC6C,KAAK,CAACnB,CAAC,GAAG,CAAC,GAAGH,IAAI,CAACwB,GAAG,CAACxD,SAAS,CAAC,GAAG,GAAG;MACtD;MAEA,IAAID,eAAe,GAAG,CAAC,IAAIC,SAAS,GAAGH,WAAW,CAACE,eAAe,GAAG,CAAC,CAAC,IAAIA,eAAe,GAAG,CAAC,EAAE;QAE9FA,eAAe,EAAE;QACjB;MACF;MAEA4D,sBAAsB,CAAC1D,SAAS,CAAC;IACnC,CAAC;IAED,MAAM0D,sBAAsB,GAAIC,QAAQ,IAAK;MAC3C1D,UAAU,CAAC2D,OAAO,CAACC,QAAQ,IAAI;QAC7BA,QAAQ,CAAC5B,QAAQ,CAACqB,CAAC,IAAIK,QAAQ;MACjC,CAAC,CAAC;MACFzD,OAAO,CAAC0D,OAAO,CAACE,MAAM,IAAI;QACxBA,MAAM,CAAC7B,QAAQ,CAACqB,CAAC,IAAIK,QAAQ;MAC/B,CAAC,CAAC;MAEFxD,KAAK,CAACyD,OAAO,CAACG,IAAI,IAAE;QAClBA,IAAI,CAAC9B,QAAQ,CAACqB,CAAC,IAAGK,QAAQ;MAC5B,CAAC,CAAC;IACJ,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMvB,mBAAmB,GAAIa,KAAK,IAAK;MACrCA,KAAK,CAACe,cAAc,CAAC,CAAC;MAEtB,MAAMC,SAAS,GAAG,IAAIvF,KAAK,CAACwF,SAAS,CAAC,CAAC;MACvC,MAAMC,KAAK,GAAG,IAAIzF,KAAK,CAAC0F,OAAO,CAAC,CAAC;MAEjCD,KAAK,CAACb,CAAC,GAAIL,KAAK,CAACoB,OAAO,GAAG1D,MAAM,CAACC,UAAU,GAAI,CAAC,GAAG,CAAC;MACrDuD,KAAK,CAACrB,CAAC,GAAG,EAAEG,KAAK,CAACqB,OAAO,GAAG3D,MAAM,CAACE,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC;MAEvDoD,SAAS,CAACM,aAAa,CAACJ,KAAK,EAAE5E,MAAM,CAACiB,OAAO,CAAC;MAE9C,MAAMgE,UAAU,GAAGP,SAAS,CAACQ,gBAAgB,CAACxE,UAAU,CAAC;MACzD,IAAIuE,UAAU,CAACf,MAAM,GAAG,CAAC,EAAE;QACzB,MAAMiB,iBAAiB,GAAGF,UAAU,CAAC,CAAC,CAAC,CAACG,MAAM;QAC9C,IAAID,iBAAiB,CAACE,QAAQ,CAACC,GAAG,EAAE;UAClC5F,QAAQ,CAACyF,iBAAiB,CAACE,QAAQ,CAACC,GAAG,CAAC;QAC1C,CAAC,MACG;UACFC,KAAK,CAAC,OAAO,CAAC;QAChB;MACF;IACF,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIxF,MAAM,CAACiB,OAAO,IAAIhB,QAAQ,CAACgB,OAAO,EAAE;QACtCjB,MAAM,CAACiB,OAAO,CAACwE,MAAM,GAAGrE,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW;QAC9DtB,MAAM,CAACiB,OAAO,CAACyE,sBAAsB,CAAC,CAAC;QACvCzF,QAAQ,CAACgB,OAAO,CAACO,OAAO,CAACJ,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;MACjE;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;IACX,MAAM2E,gBAAgB,GAAGzC,OAAO,CAAC,CAAC;IAElC9B,MAAM,CAACwB,gBAAgB,CAAC,QAAQ,EAAE4C,YAAY,CAAC;IAE/C,OAAO,MAAM;MACX,IAAIG,gBAAgB,EAAE;QACpBA,gBAAgB,CAAC,CAAC;MACpB;MACA,IAAIxF,QAAQ,CAACc,OAAO,EAAE;QACpBd,QAAQ,CAACc,OAAO,CAAC2E,OAAO,CAAC,CAAC;MAC5B;MACA,IAAI3F,QAAQ,CAACgB,OAAO,EAAE;QACpBhB,QAAQ,CAACgB,OAAO,CAAC2E,OAAO,CAAC,CAAC;MAC5B;MACA,IAAI7F,KAAK,CAACkB,OAAO,EAAE;QACjBlB,KAAK,CAACkB,OAAO,CAAC4E,KAAK,CAAC,CAAC;MACvB;MACA,IAAI5F,QAAQ,CAACgB,OAAO,IAAIhB,QAAQ,CAACgB,OAAO,CAACW,UAAU,EAAE;QACnDH,QAAQ,CAACC,IAAI,CAACoE,WAAW,CAAC7F,QAAQ,CAACgB,OAAO,CAACW,UAAU,CAAC;MACxD;MACA,IAAIxB,QAAQ,CAACa,OAAO,EAAE;QACpBQ,QAAQ,CAACC,IAAI,CAACoE,WAAW,CAAC1F,QAAQ,CAACa,OAAO,CAAC;MAC7C;MACAQ,QAAQ,CAACsE,mBAAmB,CAAC,WAAW,EAAElD,mBAAmB,CAAC;MAC9DpB,QAAQ,CAACsE,mBAAmB,CAAC,SAAS,EAAEjD,SAAS,CAAC;MAClD1B,MAAM,CAAC2E,mBAAmB,CAAC,QAAQ,EAAEP,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMzC,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMiD,MAAM,GAAG,IAAI3G,UAAU,CAAC,CAAC;IAC/B2G,MAAM,CAACC,IAAI,CAAC,qEAAqE,EAAE,UAAUC,IAAI,EAAE;MACjG,MAAMC,cAAc,GAAGA,CAACrF,IAAI,EAAEiD,CAAC,EAAER,CAAC,EAAEZ,CAAC,EAAEyD,IAAI,EAAEnE,KAAK,EAACqD,GAAG,KAAK;QACzD,MAAMe,YAAY,GAAG,IAAI/G,YAAY,CAACwB,IAAI,EAAE;UAC1CoF,IAAI,EAAEA,IAAI;UACVE,IAAI,EAAEA,IAAI;UACVE,MAAM,EAAE,GAAG;UACXC,aAAa,EAAE,CAAC;UAChBC,YAAY,EAAE;QAChB,CAAC,CAAC;QACF,MAAMC,YAAY,GAAG,IAAItH,KAAK,CAAC6C,iBAAiB,CAAC;UAAEC,KAAK,EAAEA;QAAM,CAAC,CAAC;QAClE,MAAMqC,QAAQ,GAAG,IAAInF,KAAK,CAAC+C,IAAI,CAACmE,YAAY,EAAEI,YAAY,CAAC;QAC3DnC,QAAQ,CAAC5B,QAAQ,CAACgE,GAAG,CAAC3C,CAAC,EAAER,CAAC,EAAEZ,CAAC,CAAC;QAC9B2B,QAAQ,CAACe,QAAQ,CAACC,GAAG,GAAGA,GAAG;QAC3BvF,KAAK,CAACkB,OAAO,CAACkB,GAAG,CAACmC,QAAQ,CAAC;QAC3B5D,UAAU,CAACiG,IAAI,CAACrC,QAAQ,CAAC;MAC3B,CAAC;;MAED;MACA6B,cAAc,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;MAC3DA,cAAc,CAAC,kBAAkB,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;MAC5DA,cAAc,CAAC,4CAA4C,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC;MACzFA,cAAc,CAAC,2BAA2B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC;MACxEA,cAAc,CAAC,8BAA8B,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,EAAE,EAAE,QAAQ,EAAE,SAAS,CAAC;IACvF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMnD,aAAa,GAAGA,CAAA,KAAM;IAC1B,SAAS4D,YAAYA,CAAC7C,CAAC,EAAER,CAAC,EAAEZ,CAAC,EAAE;MAC7B;MACA,SAASkE,cAAcA,CAACC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAE;QACjD,MAAMC,QAAQ,GAAG,IAAI9H,KAAK,CAAC+H,KAAK,CAAC,CAAC;;QAElC;QACA,MAAMC,YAAY,GAAG,IAAIhI,KAAK,CAAC2C,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;QACrD,MAAMsF,YAAY,GAAG,IAAIjI,KAAK,CAAC6C,iBAAiB,CAAC;UAAEC,KAAK,EAAE;QAAS,CAAC,CAAC,CAAC,CAAC;QACvE,MAAMoF,KAAK,GAAG,IAAIlI,KAAK,CAAC+C,IAAI,CAACiF,YAAY,EAAEC,YAAY,CAAC;QACxDC,KAAK,CAAC3E,QAAQ,CAACgE,GAAG,CAACI,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC;;QAE7C;QACA,MAAMM,cAAc,GAAG,IAAInI,KAAK,CAAC2C,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC3D,MAAMyF,cAAc,GAAG,IAAIpI,KAAK,CAAC6C,iBAAiB,CAAC;UAAEC,KAAK,EAAE;QAAS,CAAC,CAAC;QACvE,MAAMuF,OAAO,GAAG,CACd;UAAEzD,CAAC,EAAE,CAAC,CAAC;UAAER,CAAC,EAAE,GAAG;UAAEZ,CAAC,EAAE;QAAK,CAAC,EAC1B;UAAEoB,CAAC,EAAE,CAAC;UAAER,CAAC,EAAE,GAAG;UAAEZ,CAAC,EAAE;QAAK,CAAC,EACzB;UAAEoB,CAAC,EAAE,CAAC;UAAER,CAAC,EAAE,GAAG;UAAEZ,CAAC,EAAE;QAAK,CAAC,EACzB;UAAEoB,CAAC,EAAE,CAAC,CAAC;UAAER,CAAC,EAAE,CAAC,CAAC;UAAEZ,CAAC,EAAE;QAAK,CAAC,EACzB;UAAEoB,CAAC,EAAE,CAAC;UAAER,CAAC,EAAE,CAAC,CAAC;UAAEZ,CAAC,EAAE;QAAK,CAAC,EACxB;UAAEoB,CAAC,EAAE,CAAC;UAAER,CAAC,EAAE,CAAC,CAAC;UAAEZ,CAAC,EAAE;QAAK,CAAC,EACxB;UAAEoB,CAAC,EAAE,CAAC,CAAC;UAAER,CAAC,EAAE,GAAG;UAAEZ,CAAC,EAAE;QAAK,CAAC,EAC1B;UAAEoB,CAAC,EAAE,CAAC,CAAC;UAAER,CAAC,EAAE,CAAC,CAAC;UAAEZ,CAAC,EAAE;QAAK,CAAC,EACzB;UAAEoB,CAAC,EAAE,CAAC;UAAER,CAAC,EAAE,GAAG;UAAEZ,CAAC,EAAE;QAAK,CAAC,EACzB;UAAEoB,CAAC,EAAE,CAAC;UAAER,CAAC,EAAE,CAAC,CAAC;UAAEZ,CAAC,EAAE;QAAK,CAAC,CACzB;QAED6E,OAAO,CAACnD,OAAO,CAAEoD,GAAG,IAAK;UACvB,MAAMC,UAAU,GAAG,IAAIvI,KAAK,CAAC+C,IAAI,CAACoF,cAAc,EAAEC,cAAc,CAAC;UACjEG,UAAU,CAAChF,QAAQ,CAACgE,GAAG,CAACI,OAAO,GAAGW,GAAG,CAAC1D,CAAC,EAAEgD,OAAO,GAAGU,GAAG,CAAClE,CAAC,EAAEyD,OAAO,GAAGS,GAAG,CAAC9E,CAAC,CAAC;UAC1EsE,QAAQ,CAAC9E,GAAG,CAACuF,UAAU,CAAC;QAC1B,CAAC,CAAC;;QAEF;QACA,MAAMC,aAAa,GAAG,IAAIxI,KAAK,CAAC2C,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACxD,MAAM8F,aAAa,GAAG,IAAIzI,KAAK,CAAC6C,iBAAiB,CAAC;UAAEC,KAAK,EAAE;QAAQ,CAAC,CAAC;QAErE,MAAM4F,MAAM,GAAG,IAAI1I,KAAK,CAAC+C,IAAI,CAACyF,aAAa,EAAEC,aAAa,CAAC;QAC3DC,MAAM,CAACnF,QAAQ,CAACgE,GAAG,CAACI,OAAO,EAAEC,OAAO,GAAG,GAAG,EAAEC,OAAO,CAAC;QAEpD,MAAMc,MAAM,GAAG,IAAI3I,KAAK,CAAC+C,IAAI,CAACyF,aAAa,EAAEC,aAAa,CAAC;QAC3DE,MAAM,CAACpF,QAAQ,CAACgE,GAAG,CAACI,OAAO,EAAEC,OAAO,GAAG,GAAG,EAAEC,OAAO,CAAC;;QAEpD;QACAC,QAAQ,CAAC9E,GAAG,CAACkF,KAAK,CAAC;QACnBJ,QAAQ,CAAC9E,GAAG,CAAC0F,MAAM,CAAC;QACpBZ,QAAQ,CAAC9E,GAAG,CAAC2F,MAAM,CAAC;QAEpB,OAAOb,QAAQ;MACjB;;MAEA;MACA,MAAMc,SAAS,GAAGlB,cAAc,CAAC9C,CAAC,EAAER,CAAC,EAAEZ,CAAC,CAAC;MACzC,MAAMqF,SAAS,GAAGnB,cAAc,CAAC9C,CAAC,EAAGR,CAAC,GAAE,CAAC,EAAGZ,CAAC,GAAC,CAAC,CAAC;;MAEhD;MACA5C,KAAK,CAACkB,OAAO,CAACkB,GAAG,CAAC4F,SAAS,CAAC;MAC5BhI,KAAK,CAACkB,OAAO,CAACkB,GAAG,CAAC6F,SAAS,CAAC;MAE5BrH,OAAO,CAACgG,IAAI,CAACoB,SAAS,EAAEC,SAAS,CAAC;IACpC;;IAEA;IACApB,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,CAAC;;EAED;EACA,MAAM3D,SAAS,GAAGA,CAAA,KAAM;IACtB,SAASA,SAASA,CAACc,CAAC,EAACR,CAAC,EAACZ,CAAC,EAAC;MACvB,MAAMsF,QAAQ,GAAG,IAAI9I,KAAK,CAAC+H,KAAK,CAAC,CAAC;;MAElC;MACA,MAAMgB,WAAW,GAAG,IAAI/I,KAAK,CAACgJ,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE3F,IAAI,CAACC,EAAE,CAAC;MAC/D,MAAM2F,WAAW,GAAG,IAAIjJ,KAAK,CAAC6C,iBAAiB,CAAC;QAAEC,KAAK,EAAE;MAAS,CAAC,CAAC,CAAC,CAAC;MACtE,MAAMoG,GAAG,GAAG,IAAIlJ,KAAK,CAAC+C,IAAI,CAACgG,WAAW,EAAEE,WAAW,CAAC;MACpDC,GAAG,CAAC3F,QAAQ,CAACgE,GAAG,CAAC3C,CAAC,EAACR,CAAC,EAACZ,CAAC,CAAC;MACvBsF,QAAQ,CAAC9F,GAAG,CAACkG,GAAG,CAAC;;MAEjB;MACA,MAAMC,WAAW,GAAG,IAAInJ,KAAK,CAACoJ,iBAAiB,CAAC;QAAEtG,KAAK,EAAE;MAAS,CAAC,CAAC,CAAC,CAAC;MACtE,KAAK,IAAIuG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIhG,IAAI,CAACC,EAAE,EAAE+F,CAAC,IAAIhG,IAAI,CAACC,EAAE,GAAG,EAAE,EAAE;QAC/C,MAAMgG,WAAW,GAAG,IAAItJ,KAAK,CAACuJ,cAAc,CAAC,CAAC;QAC9C,MAAMC,QAAQ,GAAG,IAAIC,YAAY,CAAC,CAChC7E,CAAC,GAACvB,IAAI,CAACyB,GAAG,CAACuE,CAAC,CAAC,GAAG,CAAC,EAAEjF,CAAC,GAACf,IAAI,CAACwB,GAAG,CAACwE,CAAC,CAAC,GAAG,CAAC,EAAE7F,CAAC,EACvCoB,CAAC,GAACvB,IAAI,CAACyB,GAAG,CAACuE,CAAC,CAAC,GAAG,CAAC,EAAEjF,CAAC,GAACf,IAAI,CAACwB,GAAG,CAACwE,CAAC,CAAC,GAAG,CAAC,EAAE7F,CAAC,CACxC,CAAC;QACF8F,WAAW,CAACI,YAAY,CAAC,UAAU,EAAE,IAAI1J,KAAK,CAAC2J,eAAe,CAACH,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC5E,MAAMI,GAAG,GAAG,IAAI5J,KAAK,CAAC6J,IAAI,CAACP,WAAW,EAAEH,WAAW,CAAC;QACpDL,QAAQ,CAAC9F,GAAG,CAAC4G,GAAG,CAAC;MACnB;MACA;MACAhJ,KAAK,CAACkB,OAAO,CAACkB,GAAG,CAAC8F,QAAQ,CAAC;MAC3BrH,KAAK,CAAC+F,IAAI,CAACsB,QAAQ,CAAC;IACtB;IACAhF,SAAS,CAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,OAAO,IAAI;AACb,CAAC;AAACxD,EAAA,CA9WID,UAAU;EAAA,QACGD,WAAW;AAAA;AAAA0J,EAAA,GADxBzJ,UAAU;AAgXhB,eAAeA,UAAU;AAAC,IAAAyJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}