{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const scene = useRef(null);\n  const camera = useRef(null);\n  const renderer = useRef(null);\n  const cube = useRef(null);\n  const controls = useRef(null);\n  const notesDiv = useRef(null);\n  const checkpoints = [0, 5, 8, 12, 30, 33];\n  const notes = [\"Checkpoint 1: Move the right arrow key!\", \"1\", \"2\", \"3\", \"Checkpoint 2: Done Schooling from kendriya vidyalaya Sangathan, with lots of happy memories and Freinds!\", \"Click to Enter in the school!\"];\n  let checkpointIndex = 0;\n  let xMovement = 0;\n  const xdistance = 3;\n  useEffect(() => {\n    const initScene = () => {\n      // Scene, camera, renderer setup\n      scene.current = new THREE.Scene();\n      camera.current = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      renderer.current = new THREE.WebGLRenderer();\n      renderer.current.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.current.domElement);\n\n      // Cube setup\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({\n        color: 0xffffff\n      });\n      cube.current = new THREE.Mesh(geometry, material);\n      scene.current.add(cube.current);\n\n      // Orbit controls setup\n      controls.current = new OrbitControls(camera.current, renderer.current.domElement);\n      controls.current.enableDamping = true;\n      controls.current.dampingFactor = 0.25;\n      controls.current.screenSpacePanning = false;\n      controls.current.maxPolarAngle = Math.PI / 2;\n\n      // Set initial camera position\n      camera.current.position.z = 5;\n\n      // Create notes display\n      notesDiv.current = document.createElement('div');\n      notesDiv.current.style.position = 'absolute';\n      notesDiv.current.style.textAlign = 'center';\n      notesDiv.current.style.top = '30px';\n      notesDiv.current.style.padding = '10px';\n      notesDiv.current.style.border = '2px solid white';\n      notesDiv.current.style.backgroundColor = 'black';\n      notesDiv.current.style.zIndex = '1000';\n      document.body.appendChild(notesDiv.current);\n\n      // Event listeners\n      document.addEventListener('mousedown', onDocumentMouseDown, false);\n      document.addEventListener('keydown', onKeyDown);\n\n      // Create elements\n      createFlowers();\n      createClouds();\n      createText();\n      createSchools();\n      createSun();\n\n      // Start animation loop\n      animate();\n    };\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Update orbit controls\n      controls.current.update();\n\n      // Perform any other animations or updates\n      cube.current.rotation.x += 0.01;\n      cube.current.rotation.y += 0.01;\n\n      // Render scene\n      renderer.current.render(scene.current, camera.current);\n    };\n    const onKeyDown = event => {\n      if (event.code === 'ArrowRight') {\n        xMovement += 3;\n        handleArrowRight();\n      } else if (event.code === 'ArrowLeft') {\n        xMovement -= 3;\n        handleArrowLeft();\n      }\n    };\n    const handleArrowRight = () => {\n      cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n      cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n      cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      if (checkpointIndex < checkpoints.length && xMovement >= checkpoints[checkpointIndex]) {\n        displayCheckpointNote();\n        checkpointIndex++;\n      }\n      moveBackgroundElements(-xdistance);\n    };\n    const handleArrowLeft = () => {\n      cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n      cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n      cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      if (checkpointIndex > 0 && xMovement < checkpoints[checkpointIndex - 1] && checkpointIndex > 4) {\n        checkpointIndex--;\n        displayCheckpointNote();\n      }\n      moveBackgroundElements(xdistance);\n    };\n    const moveBackgroundElements = distance => {\n      // Replace with your actual logic for moving flowers, clouds, texts, schools, logos\n      // Example:\n      // flowers.forEach(flower => {\n      //   flower.position.x += distance;\n      // });\n      // clouds.forEach(cloud => {\n      //   cloud.position.x += distance;\n      // });\n      // textMeshes.forEach(textMesh => {\n      //   textMesh.position.x += distance;\n      // });\n      // schools.forEach(school => {\n      //   school.position.x += distance;\n      // });\n    };\n    const displayCheckpointNote = () => {\n      notesDiv.current.innerText = notes[checkpointIndex];\n      notesDiv.current.style.display = 'block';\n      setTimeout(() => {\n        notesDiv.current.style.display = 'none';\n      }, 2000);\n    };\n    const onDocumentMouseDown = event => {\n      event.preventDefault();\n      const raycaster = new THREE.Raycaster();\n      const mouse = new THREE.Vector2();\n      mouse.x = event.clientX / window.innerWidth * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n      raycaster.setFromCamera(mouse, camera.current);\n\n      // Replace textMeshes with your actual objects\n      // const intersects = raycaster.intersectObjects(textMeshes);\n      // if (intersects.length > 0) {\n      //   const intersectedObject = intersects[0].object;\n      //   if (intersectedObject.userData.url) {\n      //     window.open(intersectedObject.userData.url, '_blank');\n      //   }\n      // }\n    };\n\n    // Initialize scene when component mounts\n    initScene();\n\n    // Clean up Three.js scene when component unmounts\n    return () => {\n      // Dispose Three.js objects, remove event listeners, etc.\n      scene.current = null;\n      camera.current = null;\n      renderer.current = null;\n      cube.current = null;\n      controls.current.dispose();\n      controls.current = null;\n      document.removeEventListener('mousedown', onDocumentMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, []);\n  useEffect(() => {\n    const handleResize = () => {\n      if (camera.current) {\n        camera.current.aspect = window.innerWidth / window.innerHeight;\n        camera.current.updateProjectionMatrix();\n        renderer.current.setSize(window.innerWidth, window.innerHeight);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Function to create flowers\n  const createFlowers = () => {\n    // Example implementation\n    // const flowers = [];\n    // createFlower(x, y, z);\n  };\n\n  // Function to create clouds\n  const createClouds = () => {\n    // Example implementation\n    // const clouds = [];\n    // createCloud(x, y, z);\n  };\n\n  // Function to create text labels\n  const createText = () => {\n    // Example implementation using FontLoader\n    // const loader = new THREE.FontLoader();\n    // loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n    //   createTextMesh('Welcome to Three.js', x, y, z, size, color);\n    // });\n  };\n\n  // Function to create schools/buildings\n  const createSchools = () => {\n    // Example implementation\n    // const schools = [];\n    // createSchool(x, y, z);\n  };\n\n  // Function to create the sun\n  const createSun = () => {\n    // Example implementation\n    // createSun();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(ThreeScene, \"Kvos702AwVCoC+gsizJ60o9cz8c=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","Fragment","_Fragment","jsxDEV","_jsxDEV","ThreeScene","_s","scene","camera","renderer","cube","controls","notesDiv","checkpoints","notes","checkpointIndex","xMovement","xdistance","initScene","current","Scene","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","Mesh","add","enableDamping","dampingFactor","screenSpacePanning","maxPolarAngle","Math","PI","position","z","createElement","style","textAlign","top","padding","border","backgroundColor","zIndex","addEventListener","onDocumentMouseDown","onKeyDown","createFlowers","createClouds","createText","createSchools","createSun","animate","requestAnimationFrame","update","rotation","x","y","render","event","code","handleArrowRight","handleArrowLeft","scale","sin","cos","length","displayCheckpointNote","moveBackgroundElements","distance","innerText","display","setTimeout","preventDefault","raycaster","Raycaster","mouse","Vector2","clientX","clientY","setFromCamera","dispose","removeEventListener","handleResize","aspect","updateProjectionMatrix","_c","$RefreshReg$"],"sources":["/Users/swati/Documents/Portfoilo/reactthree/src/components/app.js"],"sourcesContent":["\n\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nconst ThreeScene = () => {\n  const scene = useRef(null);\n  const camera = useRef(null);\n  const renderer = useRef(null);\n  const cube = useRef(null);\n  const controls = useRef(null);\n  const notesDiv = useRef(null);\n\n  const checkpoints = [0, 5, 8, 12, 30, 33];\n  const notes = [\n    \"Checkpoint 1: Move the right arrow key!\",\n    \"1\", \"2\", \"3\",\n    \"Checkpoint 2: Done Schooling from kendriya vidyalaya Sangathan, with lots of happy memories and Freinds!\",\n    \"Click to Enter in the school!\"\n  ];\n  let checkpointIndex = 0;\n  let xMovement = 0;\n  const xdistance = 3;\n\n  useEffect(() => {\n    const initScene = () => {\n      // Scene, camera, renderer setup\n      scene.current = new THREE.Scene();\n      camera.current = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      renderer.current = new THREE.WebGLRenderer();\n      renderer.current.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.current.domElement);\n\n      // Cube setup\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n      cube.current = new THREE.Mesh(geometry, material);\n      scene.current.add(cube.current);\n\n      // Orbit controls setup\n      controls.current = new OrbitControls(camera.current, renderer.current.domElement);\n      controls.current.enableDamping = true;\n      controls.current.dampingFactor = 0.25;\n      controls.current.screenSpacePanning = false;\n      controls.current.maxPolarAngle = Math.PI / 2;\n\n      // Set initial camera position\n      camera.current.position.z = 5;\n\n      // Create notes display\n      notesDiv.current = document.createElement('div');\n      notesDiv.current.style.position = 'absolute';\n      notesDiv.current.style.textAlign = 'center';\n      notesDiv.current.style.top = '30px';\n      notesDiv.current.style.padding = '10px';\n      notesDiv.current.style.border = '2px solid white';\n      notesDiv.current.style.backgroundColor = 'black';\n      notesDiv.current.style.zIndex = '1000';\n      document.body.appendChild(notesDiv.current);\n\n      // Event listeners\n      document.addEventListener('mousedown', onDocumentMouseDown, false);\n      document.addEventListener('keydown', onKeyDown);\n\n      // Create elements\n      createFlowers();\n      createClouds();\n      createText();\n      createSchools();\n      createSun();\n\n      // Start animation loop\n      animate();\n    };\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Update orbit controls\n      controls.current.update();\n\n      // Perform any other animations or updates\n      cube.current.rotation.x += 0.01;\n      cube.current.rotation.y += 0.01;\n\n      // Render scene\n      renderer.current.render(scene.current, camera.current);\n    };\n\n    const onKeyDown = (event) => {\n      if (event.code === 'ArrowRight') {\n        xMovement += 3;\n        handleArrowRight();\n      } else if (event.code === 'ArrowLeft') {\n        xMovement -= 3;\n        handleArrowLeft();\n      }\n    };\n\n    const handleArrowRight = () => {\n      cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n      cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n      cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n\n      if (checkpointIndex < checkpoints.length && xMovement >= checkpoints[checkpointIndex]) {\n        displayCheckpointNote();\n        checkpointIndex++;\n      }\n\n      moveBackgroundElements(-xdistance);\n    };\n\n    const handleArrowLeft = () => {\n      cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n      cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n      cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n\n      if (checkpointIndex > 0 && xMovement < checkpoints[checkpointIndex - 1] && checkpointIndex > 4) {\n        checkpointIndex--;\n        displayCheckpointNote();\n      }\n\n      moveBackgroundElements(xdistance);\n    };\n\n    const moveBackgroundElements = (distance) => {\n      // Replace with your actual logic for moving flowers, clouds, texts, schools, logos\n      // Example:\n      // flowers.forEach(flower => {\n      //   flower.position.x += distance;\n      // });\n      // clouds.forEach(cloud => {\n      //   cloud.position.x += distance;\n      // });\n      // textMeshes.forEach(textMesh => {\n      //   textMesh.position.x += distance;\n      // });\n      // schools.forEach(school => {\n      //   school.position.x += distance;\n      // });\n    };\n\n    const displayCheckpointNote = () => {\n      notesDiv.current.innerText = notes[checkpointIndex];\n      notesDiv.current.style.display = 'block';\n      setTimeout(() => {\n        notesDiv.current.style.display = 'none';\n      }, 2000);\n    };\n\n    const onDocumentMouseDown = (event) => {\n      event.preventDefault();\n\n      const raycaster = new THREE.Raycaster();\n      const mouse = new THREE.Vector2();\n\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n      raycaster.setFromCamera(mouse, camera.current);\n\n      // Replace textMeshes with your actual objects\n      // const intersects = raycaster.intersectObjects(textMeshes);\n      // if (intersects.length > 0) {\n      //   const intersectedObject = intersects[0].object;\n      //   if (intersectedObject.userData.url) {\n      //     window.open(intersectedObject.userData.url, '_blank');\n      //   }\n      // }\n    };\n\n    // Initialize scene when component mounts\n    initScene();\n\n    // Clean up Three.js scene when component unmounts\n    return () => {\n      // Dispose Three.js objects, remove event listeners, etc.\n      scene.current = null;\n      camera.current = null;\n      renderer.current = null;\n      cube.current = null;\n      controls.current.dispose();\n      controls.current = null;\n      document.removeEventListener('mousedown', onDocumentMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (camera.current) {\n        camera.current.aspect = window.innerWidth / window.innerHeight;\n        camera.current.updateProjectionMatrix();\n        renderer.current.setSize(window.innerWidth, window.innerHeight);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Function to create flowers\n  const createFlowers = () => {\n    // Example implementation\n    // const flowers = [];\n    // createFlower(x, y, z);\n  };\n\n  // Function to create clouds\n  const createClouds = () => {\n    // Example implementation\n    // const clouds = [];\n    // createCloud(x, y, z);\n  };\n\n  // Function to create text labels\n  const createText = () => {\n    // Example implementation using FontLoader\n    // const loader = new THREE.FontLoader();\n    // loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n    //   createTextMesh('Welcome to Three.js', x, y, z, size, color);\n    // });\n  };\n\n  // Function to create schools/buildings\n  const createSchools = () => {\n    // Example implementation\n    // const schools = [];\n    // createSchool(x, y, z);\n  };\n\n  // Function to create the sun\n  const createSun = () => {\n    // Example implementation\n    // createSun();\n  };\n\n  return <></>;\n};\n\nexport default ThreeScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}