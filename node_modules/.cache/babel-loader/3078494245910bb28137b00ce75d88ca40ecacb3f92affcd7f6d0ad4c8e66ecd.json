{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nconst ThreeScene = () => {\n  _s();\n  const scene = useRef(null);\n  const camera = useRef(null);\n  const renderer = useRef(null);\n  const cube = useRef(null);\n  const controls = useRef(null);\n  const notesDiv = useRef(null);\n  const checkpoints = [0, 5, 8, 12, 30, 33];\n  const notes = [\"Checkpoint 1: Move the right arrow key!\", \"1\", \"2\", \"3\", \"Checkpoint 2: Done Schooling from kendriya vidyalaya Sangathan, with lots of happy memories and Friends!\", \"Click to Enter in the school!\"];\n  let checkpointIndex = 0;\n  let xMovement = 0;\n  const xdistance = 3;\n  const flowers = [];\n  const clouds = [];\n  const textMeshes = [];\n  const schools = [];\n  useEffect(() => {\n    const initScene = () => {\n      scene.current = new THREE.Scene();\n      camera.current = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      renderer.current = new THREE.WebGLRenderer();\n      renderer.current.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.current.domElement);\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({\n        color: 0xffffff\n      });\n      cube.current = new THREE.Mesh(geometry, material);\n      scene.current.add(cube.current);\n\n      // controls.current = new OrbitControls(camera.current, renderer.current.domElement);\n      // controls.current.enableDamping = true;\n      // controls.current.dampingFactor = 0.25;\n      // controls.current.screenSpacePanning = false;\n      // controls.current.maxPolarAngle = Math.PI / 2;\n\n      camera.current.position.z = 5;\n      notesDiv.current = document.createElement('div');\n      notesDiv.current.style.position = 'absolute';\n      notesDiv.current.style.textAlign = 'center';\n      notesDiv.current.style.top = '30px';\n      notesDiv.current.style.padding = '10px';\n      notesDiv.current.style.border = '2px solid white';\n      notesDiv.current.style.backgroundColor = 'black';\n      notesDiv.current.style.zIndex = '1000';\n      document.body.appendChild(notesDiv.current);\n      document.addEventListener('mousedown', onDocumentMouseDown, false);\n      document.addEventListener('keydown', onKeyDown);\n      createFlowers();\n      createClouds();\n      createText();\n      createSchools();\n      createSun();\n    };\n    const animate = () => {\n      if (!scene.current || !camera.current || !renderer.current) {\n        return;\n      }\n      const animationId = requestAnimationFrame(animate);\n      if (controls.current) {\n        controls.current.update();\n      }\n      if (cube.current) {\n        cube.current.rotation.x += 0.01;\n        cube.current.rotation.y += 0.01;\n      }\n      renderer.current.render(scene.current, camera.current);\n      return () => {\n        cancelAnimationFrame(animationId);\n      };\n    };\n    const onKeyDown = event => {\n      if (event.code === 'ArrowRight') {\n        xMovement -= 3;\n        handleArrowRight();\n      } else if (event.code === 'ArrowLeft') {\n        xMovement += 3;\n        handleArrowLeft();\n      }\n    };\n    const handleArrowRight = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n      if (checkpointIndex < checkpoints.length && xMovement >= checkpoints[checkpointIndex]) {\n        displayCheckpointNote();\n        checkpointIndex++;\n      }\n      moveBackgroundElements(-xdistance);\n    };\n    const handleArrowLeft = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n      if (checkpointIndex > 0 && xMovement < checkpoints[checkpointIndex - 1] && checkpointIndex > 4) {\n        checkpointIndex--;\n        displayCheckpointNote();\n      }\n      moveBackgroundElements(xdistance);\n    };\n    const moveBackgroundElements = distance => {\n      flowers.forEach(flower => {\n        flower.position.x += distance;\n      });\n      clouds.forEach(cloud => {\n        cloud.position.x += distance;\n      });\n      textMeshes.forEach(textMesh => {\n        textMesh.position.x += distance;\n      });\n      schools.forEach(school => {\n        school.position.x += distance;\n      });\n    };\n    const displayCheckpointNote = () => {\n      if (notesDiv.current) {\n        notesDiv.current.innerText = notes[checkpointIndex];\n        notesDiv.current.style.display = 'block';\n        setTimeout(() => {\n          notesDiv.current.style.display = 'none';\n        }, 2000);\n      }\n    };\n    const onDocumentMouseDown = event => {\n      event.preventDefault();\n      const raycaster = new THREE.Raycaster();\n      const mouse = new THREE.Vector2();\n      mouse.x = event.clientX / window.innerWidth * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n      raycaster.setFromCamera(mouse, camera.current);\n      const intersects = raycaster.intersectObjects(textMeshes);\n      if (intersects.length > 0) {\n        const intersectedObject = intersects[0].object;\n        if (intersectedObject.userData.url) {\n          window.open(intersectedObject.userData.url, '_blank');\n        }\n      }\n    };\n    const handleResize = () => {\n      if (camera.current && renderer.current) {\n        camera.current.aspect = window.innerWidth / window.innerHeight;\n        camera.current.updateProjectionMatrix();\n        renderer.current.setSize(window.innerWidth, window.innerHeight);\n      }\n    };\n    initScene();\n    const cleanupAnimation = animate();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      if (cleanupAnimation) {\n        cleanupAnimation();\n      }\n      if (controls.current) {\n        controls.current.dispose();\n      }\n      if (renderer.current) {\n        renderer.current.dispose();\n      }\n      if (scene.current) {\n        scene.current.clear();\n      }\n      if (renderer.current && renderer.current.domElement) {\n        document.body.removeChild(renderer.current.domElement);\n      }\n      if (notesDiv.current) {\n        document.body.removeChild(notesDiv.current);\n      }\n      document.removeEventListener('mousedown', onDocumentMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Function to create flowers\n  const createFlowers = () => {\n    function createFlower(x, y, z) {\n      const flowerGeometry = new THREE.CylinderGeometry(0.1, 0.1, 1, 32);\n      const flowerMaterial = new THREE.MeshBasicMaterial({\n        color: 0x8B4513\n      });\n      const flowerStem = new THREE.Mesh(flowerGeometry, flowerMaterial);\n      const flowerPetalGeometry = new THREE.SphereGeometry(0.3, 32, 32);\n      const flowerPetalMaterial = new THREE.MeshBasicMaterial({\n        color: 0xFF69B4\n      });\n      const flowerPetal = new THREE.Mesh(flowerPetalGeometry, flowerPetalMaterial);\n      flowerStem.position.set(x, y, z);\n      flowerPetal.position.set(x, y + 0.6, z);\n      scene.current.add(flowerStem);\n      scene.current.add(flowerPetal);\n      flowers.push(flowerStem, flowerPetal);\n    }\n\n    // Example positions\n    // createFlower(-2, 0, -5);\n    // createFlower(0, 0, -5);\n    // createFlower(2, 0, -5);\n  };\n\n  // Function to create clouds\n  const createClouds = () => {\n    function createCloud(x, y, z) {\n      const cloudGeometry = new THREE.SphereGeometry(1, 32, 32);\n      const cloudMaterial = new THREE.MeshBasicMaterial({\n        color: 0xFFFFFF\n      });\n      const cloud = new THREE.Mesh(cloudGeometry, cloudMaterial);\n      cloud.position.set(x, y, z);\n      scene.current.add(cloud);\n      clouds.push(cloud);\n    }\n    // Example positions\n    // createCloud(-5, 2, -10);\n    // createCloud(0, 3, -10);\n    // createCloud(5, 2, -10);\n  };\n\n  // Function to create text labels\n  const createText = () => {\n    const loader = new FontLoader();\n    loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n      const createTextMesh = (text, x, y, z, size, color) => {\n        const textGeometry = new TextGeometry(text, {\n          font: font,\n          size: size,\n          height: 0.1,\n          curveSegments: 2,\n          bevelEnabled: false\n        });\n        const textMaterial = new THREE.MeshBasicMaterial({\n          color: color\n        });\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n        textMesh.position.set(x, y, z);\n        scene.current.add(textMesh);\n        textMeshes.push(textMesh);\n      };\n\n      // Example text labels\n      createTextMesh('Welcome to Three.js', -6, 5, -5, 1, 0xffffff);\n      createTextMesh('Hello, I am Swati', -4.3, 2, -5, 1, 0xffffff);\n      createTextMesh('A passionate developer and tech enthusiast', -6.4, -3, -5, 0.5, 0xffffff);\n      createTextMesh('Let\\'s move forward...', -3, -4.2, -5, 0.5, 0xffffff);\n    });\n  };\n\n  // Function to create schools/buildings\n  const createSchools = () => {\n    const schools = [];\n    function createSchool(x, y, z) {\n      // Function to create a building\n      function createBuilding(xOffset, yOffset, zOffset) {\n        const building = new THREE.Group();\n\n        // Create the walls\n        const wallGeometry = new THREE.BoxGeometry(5, 5, 2);\n        const wallMaterial = new THREE.MeshBasicMaterial({\n          color: 0xffffff\n        }); // White color\n        const walls = new THREE.Mesh(wallGeometry, wallMaterial);\n        walls.position.set(xOffset, yOffset, zOffset);\n\n        // Create windows\n        const windowGeometry = new THREE.BoxGeometry(0.5, 0.7, 0.1);\n        const windowMaterial = new THREE.MeshBasicMaterial({\n          color: 0x444444\n        });\n        const windows = [{\n          x: -1,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 0,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 1,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: -1,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 0,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 1,\n          y: -1,\n          z: 1.01\n        }, {\n          x: -2,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: -2,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 2,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 2,\n          y: -1,\n          z: 1.01\n        }];\n        windows.forEach(pos => {\n          const windowMesh = new THREE.Mesh(windowGeometry, windowMaterial);\n          windowMesh.position.set(xOffset + pos.x, yOffset + pos.y, zOffset + pos.z);\n          building.add(windowMesh);\n        });\n\n        // Create horizontal strips\n        const stripGeometry = new THREE.BoxGeometry(5, 0.3, 2);\n        const stripMaterial = new THREE.MeshBasicMaterial({\n          color: 0x04192\n        });\n        const strip1 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip1.position.set(xOffset, yOffset + 1.5, zOffset);\n        const strip2 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip2.position.set(xOffset, yOffset - 0.2, zOffset);\n\n        // Add components to the building group\n        building.add(walls);\n        building.add(strip1);\n        building.add(strip2);\n        return building;\n      }\n\n      // Create two buildings\n      const building1 = createBuilding(x, y, z);\n      const building2 = createBuilding(x + 10, y, z);\n\n      // Add the buildings to the scene\n      scene.current.add(building1);\n      scene.current.add(building2);\n      schools.push(building1, building2);\n    }\n\n    // Example position\n    createSchool(25, -3, -5);\n  };\n\n  // Function to create the sun\n  const createSun = () => {\n    const sunGroup = new THREE.Group();\n\n    // Create the sun (half circle)\n    const sunGeometry = new THREE.CircleGeometry(1, 32, 0, Math.PI);\n    const sunMaterial = new THREE.MeshBasicMaterial({\n      color: 0xFFFF00\n    }); // Yellow color\n    const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n    sun.position.set(34.5, -2, -5);\n    sunGroup.add(sun);\n\n    // Create rays\n    const rayMaterial = new THREE.LineBasicMaterial({\n      color: 0xd34000\n    }); // Yellow color\n    for (let i = 0; i <= Math.PI; i += Math.PI / 11) {\n      const rayGeometry = new THREE.BufferGeometry();\n      const vertices = new Float32Array([Math.cos(i) * 2, Math.sin(i) * 2, -5, Math.cos(i) * 3, Math.sin(i) * 3, -5]);\n      rayGeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n      const ray = new THREE.Line(rayGeometry, rayMaterial);\n      sunGroup.add(ray);\n    }\n    // Add the sunGroup to the scene\n    scene.current.add(sunGroup);\n  };\n  return null;\n};\n_s(ThreeScene, \"aJnEvXCihyWGUb9DxL9iC3u1rik=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","ThreeScene","_s","scene","camera","renderer","cube","controls","notesDiv","checkpoints","notes","checkpointIndex","xMovement","xdistance","flowers","clouds","textMeshes","schools","initScene","current","Scene","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","Mesh","add","position","z","createElement","style","textAlign","top","padding","border","backgroundColor","zIndex","addEventListener","onDocumentMouseDown","onKeyDown","createFlowers","createClouds","createText","createSchools","createSun","animate","animationId","requestAnimationFrame","update","rotation","x","y","render","cancelAnimationFrame","event","code","handleArrowRight","handleArrowLeft","scale","Math","sin","cos","length","displayCheckpointNote","moveBackgroundElements","distance","forEach","flower","cloud","textMesh","school","innerText","display","setTimeout","preventDefault","raycaster","Raycaster","mouse","Vector2","clientX","clientY","setFromCamera","intersects","intersectObjects","intersectedObject","object","userData","url","open","handleResize","aspect","updateProjectionMatrix","cleanupAnimation","dispose","clear","removeChild","removeEventListener","createFlower","flowerGeometry","CylinderGeometry","flowerMaterial","flowerStem","flowerPetalGeometry","SphereGeometry","flowerPetalMaterial","flowerPetal","set","push","createCloud","cloudGeometry","cloudMaterial","loader","FontLoader","load","font","createTextMesh","text","size","textGeometry","TextGeometry","height","curveSegments","bevelEnabled","textMaterial","createSchool","createBuilding","xOffset","yOffset","zOffset","building","Group","wallGeometry","wallMaterial","walls","windowGeometry","windowMaterial","windows","pos","windowMesh","stripGeometry","stripMaterial","strip1","strip2","building1","building2","sunGroup","sunGeometry","CircleGeometry","PI","sunMaterial","sun","rayMaterial","LineBasicMaterial","i","rayGeometry","BufferGeometry","vertices","Float32Array","setAttribute","BufferAttribute","ray","Line","_c","$RefreshReg$"],"sources":["/Users/swati/Documents/Portfoilo/reactthree/src/components/app.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nconst ThreeScene = () => {\n  const scene = useRef(null);\n  const camera = useRef(null);\n  const renderer = useRef(null);\n  const cube = useRef(null);\n  const controls = useRef(null);\n  const notesDiv = useRef(null);\n\n  const checkpoints = [0, 5, 8, 12, 30, 33];\n  const notes = [\n    \"Checkpoint 1: Move the right arrow key!\",\n    \"1\", \"2\", \"3\",\n    \"Checkpoint 2: Done Schooling from kendriya vidyalaya Sangathan, with lots of happy memories and Friends!\",\n    \"Click to Enter in the school!\"\n  ];\n  let checkpointIndex = 0;\n  let xMovement = 0;\n  const xdistance = 3;\n\n  const flowers = [];\n  const clouds = [];\n  const textMeshes = [];\n  const schools = [];\n\n  useEffect(() => {\n    const initScene = () => {\n      scene.current = new THREE.Scene();\n      camera.current = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      renderer.current = new THREE.WebGLRenderer();\n      renderer.current.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.current.domElement);\n\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n      cube.current = new THREE.Mesh(geometry, material);\n      scene.current.add(cube.current);\n\n      // controls.current = new OrbitControls(camera.current, renderer.current.domElement);\n      // controls.current.enableDamping = true;\n      // controls.current.dampingFactor = 0.25;\n      // controls.current.screenSpacePanning = false;\n      // controls.current.maxPolarAngle = Math.PI / 2;\n\n      camera.current.position.z = 5;\n\n      notesDiv.current = document.createElement('div');\n      notesDiv.current.style.position = 'absolute';\n      notesDiv.current.style.textAlign = 'center';\n      notesDiv.current.style.top = '30px';\n      notesDiv.current.style.padding = '10px';\n      notesDiv.current.style.border = '2px solid white';\n      notesDiv.current.style.backgroundColor = 'black';\n      notesDiv.current.style.zIndex = '1000';\n      document.body.appendChild(notesDiv.current);\n\n      document.addEventListener('mousedown', onDocumentMouseDown, false);\n      document.addEventListener('keydown', onKeyDown);\n\n      createFlowers();\n      createClouds();\n      createText();\n      createSchools();\n      createSun();\n    };\n\n    const animate = () => {\n      if (!scene.current || !camera.current || !renderer.current) {\n        return;\n      }\n\n      const animationId = requestAnimationFrame(animate);\n\n      if (controls.current) {\n        controls.current.update();\n      }\n\n      if (cube.current) {\n        cube.current.rotation.x += 0.01;\n        cube.current.rotation.y += 0.01;\n      }\n\n      renderer.current.render(scene.current, camera.current);\n\n      return () => {\n        cancelAnimationFrame(animationId);\n      };\n    };\n\n    const onKeyDown = (event) => {\n      if (event.code === 'ArrowRight') {\n        xMovement -= 3;\n        handleArrowRight();\n      } else if (event.code === 'ArrowLeft') {\n        xMovement += 3;\n        handleArrowLeft();\n      }\n    };\n\n    const handleArrowRight = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n\n      if (checkpointIndex < checkpoints.length && xMovement >= checkpoints[checkpointIndex]) {\n        displayCheckpointNote();\n        checkpointIndex++;\n      }\n\n      moveBackgroundElements(-xdistance);\n    };\n\n    const handleArrowLeft = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n\n      if (checkpointIndex > 0 && xMovement < checkpoints[checkpointIndex - 1] && checkpointIndex > 4) {\n        checkpointIndex--;\n        displayCheckpointNote();\n      }\n\n      moveBackgroundElements(xdistance);\n    };\n\n    const moveBackgroundElements = (distance) => {\n      flowers.forEach(flower => {\n        flower.position.x += distance;\n      });\n      clouds.forEach(cloud => {\n        cloud.position.x += distance;\n      });\n      textMeshes.forEach(textMesh => {\n        textMesh.position.x += distance;\n      });\n      schools.forEach(school => {\n        school.position.x += distance;\n      });\n    };\n\n    const displayCheckpointNote = () => {\n      if (notesDiv.current) {\n        notesDiv.current.innerText = notes[checkpointIndex];\n        notesDiv.current.style.display = 'block';\n        setTimeout(() => {\n          notesDiv.current.style.display = 'none';\n        }, 2000);\n      }\n    };\n\n    const onDocumentMouseDown = (event) => {\n      event.preventDefault();\n\n      const raycaster = new THREE.Raycaster();\n      const mouse = new THREE.Vector2();\n\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n      raycaster.setFromCamera(mouse, camera.current);\n\n      const intersects = raycaster.intersectObjects(textMeshes);\n      if (intersects.length > 0) {\n        const intersectedObject = intersects[0].object;\n        if (intersectedObject.userData.url) {\n          window.open(intersectedObject.userData.url, '_blank');\n        }\n      }\n    };\n\n    const handleResize = () => {\n      if (camera.current && renderer.current) {\n        camera.current.aspect = window.innerWidth / window.innerHeight;\n        camera.current.updateProjectionMatrix();\n        renderer.current.setSize(window.innerWidth, window.innerHeight);\n      }\n    };\n\n    initScene();\n    const cleanupAnimation = animate();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      if (cleanupAnimation) {\n        cleanupAnimation();\n      }\n      if (controls.current) {\n        controls.current.dispose();\n      }\n      if (renderer.current) {\n        renderer.current.dispose();\n      }\n      if (scene.current) {\n        scene.current.clear();\n      }\n      if (renderer.current && renderer.current.domElement) {\n        document.body.removeChild(renderer.current.domElement);\n      }\n      if (notesDiv.current) {\n        document.body.removeChild(notesDiv.current);\n      }\n      document.removeEventListener('mousedown', onDocumentMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Function to create flowers\n  const createFlowers = () => {\n\n    function createFlower(x, y, z) {\n      const flowerGeometry = new THREE.CylinderGeometry(0.1, 0.1, 1, 32);\n      const flowerMaterial = new THREE.MeshBasicMaterial({ color: 0x8B4513 });\n      const flowerStem = new THREE.Mesh(flowerGeometry, flowerMaterial);\n\n      const flowerPetalGeometry = new THREE.SphereGeometry(0.3, 32, 32);\n      const flowerPetalMaterial = new THREE.MeshBasicMaterial({ color: 0xFF69B4 });\n      const flowerPetal = new THREE.Mesh(flowerPetalGeometry, flowerPetalMaterial);\n\n      flowerStem.position.set(x, y, z);\n      flowerPetal.position.set(x, y + 0.6, z);\n\n      scene.current.add(flowerStem);\n      scene.current.add(flowerPetal);\n\n      flowers.push(flowerStem, flowerPetal);\n    }\n\n    // Example positions\n    // createFlower(-2, 0, -5);\n    // createFlower(0, 0, -5);\n    // createFlower(2, 0, -5);\n  };\n\n  // Function to create clouds\n  const createClouds = () => {\n\n    function createCloud(x, y, z) {\n      const cloudGeometry = new THREE.SphereGeometry(1, 32, 32);\n      const cloudMaterial = new THREE.MeshBasicMaterial({ color: 0xFFFFFF });\n      const cloud = new THREE.Mesh(cloudGeometry, cloudMaterial);\n\n      cloud.position.set(x, y, z);\n      scene.current.add(cloud);\n\n      clouds.push(cloud);\n    }\n    // Example positions\n    // createCloud(-5, 2, -10);\n    // createCloud(0, 3, -10);\n    // createCloud(5, 2, -10);\n  };\n\n  // Function to create text labels\n  const createText = () => {\n    const loader = new FontLoader();\n    loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n      const createTextMesh = (text, x, y, z, size, color) => {\n        const textGeometry = new TextGeometry(text, {\n          font: font,\n          size: size,\n          height: 0.1,\n          curveSegments: 2,\n          bevelEnabled: false\n        });\n        const textMaterial = new THREE.MeshBasicMaterial({ color: color });\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n        textMesh.position.set(x, y, z);\n        scene.current.add(textMesh);\n        textMeshes.push(textMesh);\n      };\n\n      // Example text labels\n      createTextMesh('Welcome to Three.js', -6, 5, -5, 1, 0xffffff);\n      createTextMesh('Hello, I am Swati', -4.3, 2, -5, 1, 0xffffff);\n      createTextMesh('A passionate developer and tech enthusiast', -6.4, -3, -5, 0.5, 0xffffff);\n      createTextMesh('Let\\'s move forward...', -3, -4.2, -5, 0.5, 0xffffff);\n    });\n  };\n\n  // Function to create schools/buildings\n  const createSchools = () => {\n    const schools = [];\n\n    function createSchool(x, y, z) {\n      // Function to create a building\n      function createBuilding(xOffset, yOffset, zOffset) {\n        const building = new THREE.Group();\n\n        // Create the walls\n        const wallGeometry = new THREE.BoxGeometry(5, 5, 2);\n        const wallMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff }); // White color\n        const walls = new THREE.Mesh(wallGeometry, wallMaterial);\n        walls.position.set(xOffset, yOffset, zOffset);\n\n        // Create windows\n        const windowGeometry = new THREE.BoxGeometry(0.5, 0.7, 0.1);\n        const windowMaterial = new THREE.MeshBasicMaterial({ color: 0x444444 });\n        const windows = [\n          { x: -1, y: 0.8, z: 1.01 },\n          { x: 0, y: 0.8, z: 1.01 },\n          { x: 1, y: 0.8, z: 1.01 },\n          { x: -1, y: -1, z: 1.01 },\n          { x: 0, y: -1, z: 1.01 },\n          { x: 1, y: -1, z: 1.01 },\n          { x: -2, y: 0.8, z: 1.01 },\n          { x: -2, y: -1, z: 1.01 },\n          { x: 2, y: 0.8, z: 1.01 },\n          { x: 2, y: -1, z: 1.01 },\n        ];\n\n        windows.forEach((pos) => {\n          const windowMesh = new THREE.Mesh(windowGeometry, windowMaterial);\n          windowMesh.position.set(xOffset + pos.x, yOffset + pos.y, zOffset + pos.z);\n          building.add(windowMesh);\n        });\n\n        // Create horizontal strips\n        const stripGeometry = new THREE.BoxGeometry(5, 0.3, 2);\n        const stripMaterial = new THREE.MeshBasicMaterial({ color: 0x04192 });\n\n        const strip1 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip1.position.set(xOffset, yOffset + 1.5, zOffset);\n\n        const strip2 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip2.position.set(xOffset, yOffset - 0.2, zOffset);\n\n        // Add components to the building group\n        building.add(walls);\n        building.add(strip1);\n        building.add(strip2);\n\n        return building;\n      }\n\n      // Create two buildings\n      const building1 = createBuilding(x, y, z);\n      const building2 = createBuilding(x + 10, y, z);\n\n      // Add the buildings to the scene\n      scene.current.add(building1);\n      scene.current.add(building2);\n\n      schools.push(building1, building2);\n    }\n\n    // Example position\n    createSchool(25, -3, -5);\n  };\n\n  // Function to create the sun\n  const createSun = () => {\n    const sunGroup = new THREE.Group();\n\n    // Create the sun (half circle)\n    const sunGeometry = new THREE.CircleGeometry(1, 32, 0, Math.PI);\n    const sunMaterial = new THREE.MeshBasicMaterial({ color: 0xFFFF00 }); // Yellow color\n    const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n    sun.position.set(34.5, -2, -5);\n    sunGroup.add(sun);\n\n    // Create rays\n    const rayMaterial = new THREE.LineBasicMaterial({ color: 0xd34000 }); // Yellow color\n    for (let i = 0; i <= Math.PI; i += Math.PI / 11) {\n      const rayGeometry = new THREE.BufferGeometry();\n      const vertices = new Float32Array([\n        Math.cos(i) * 2, Math.sin(i) * 2, -5,\n        Math.cos(i) * 3, Math.sin(i) * 3, -5\n      ]);\n      rayGeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n      const ray = new THREE.Line(rayGeometry, rayMaterial);\n      sunGroup.add(ray);\n    }\n    // Add the sunGroup to the scene\n    scene.current.add(sunGroup);\n  };\n\n  return null;\n};\n\nexport default ThreeScene;\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}