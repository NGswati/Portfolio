{"ast":null,"code":"var _jsxFileName = \"/Users/swati/Documents/Portfoilo/reactthree/src/components/app.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport '../styles/app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const containerRef = useRef(null);\n  let scene, camera, renderer;\n  const flowers = [];\n  const clouds = [];\n  const textMeshes = [];\n  const schools = [];\n  const logos = [];\n  useEffect(() => {\n    // Scene\n    scene = new THREE.Scene();\n\n    // Camera\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    // camera.position.x =25;\n    // Renderer\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    // Create a cube\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffffff\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    // Create flowers\n    // function createFlower(x, y, z) {\n    //   const flowerGeometry = new THREE.CylinderGeometry(0.1, 0.1, 1, 32);\n    //   const flowerMaterial = new THREE.MeshBasicMaterial({ color: 0x8B4513 });\n    //   const flowerStem = new THREE.Mesh(flowerGeometry, flowerMaterial);\n\n    //   const flowerPetalGeometry = new THREE.SphereGeometry(0.3, 32, 32);\n    //   const flowerPetalMaterial = new THREE.MeshBasicMaterial({ color: 0xFF69B4 });\n    //   const flowerPetal = new THREE.Mesh(flowerPetalGeometry, flowerPetalMaterial);\n\n    //   flowerStem.position.set(x, y, z);\n    //   flowerPetal.position.set(x, y + 0.6, z);\n\n    //   scene.add(flowerStem);\n    //   scene.add(flowerPetal);\n\n    //   flowers.push({ flowerStem, flowerPetal });\n    // }\n\n    // Create clouds\n    // function createCloud(x, y, z) {\n    //   const cloudGeometry = new THREE.SphereGeometry(1, 32, 32);\n    //   const cloudMaterial = new THREE.MeshBasicMaterial({ color: 0xFFFFFF });\n    //   const cloud = new THREE.Mesh(cloudGeometry, cloudMaterial);\n\n    //   cloud.position.set(x, y, z);\n    //   scene.add(cloud);\n\n    //   clouds.push(cloud);\n    // }\n\n    // Create text labels\n    // function createText(x, y, z, text, size, color, url) {\n    //   const loader = new THREE.FontLoader();\n    //   loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n    //     const textGeometry = new THREE.TextGeometry(text, {\n    //       font: font,\n    //       size: size,\n    //       height: 0.1,\n    //       curveSegments: 2,\n    //       bevelEnabled: false\n    //     });\n    //     const textMaterial = new THREE.MeshBasicMaterial({ color: color });\n    //     const mesh = new THREE.Mesh(textGeometry, textMaterial);\n    //     mesh.position.set(x, y, z);\n    //     mesh.castShadow = true;\n    //     mesh.userData.url = url;\n    //     scene.add(mesh);\n    //     textMeshes.push(mesh);\n    //   });\n    // }\n\n    // Create school buildings\n    function createSchool(x, y, z) {\n      function createBuilding(xOffset, yOffset, zOffset) {\n        const building = new THREE.Group();\n        const wallGeometry = new THREE.BoxGeometry(5, 5, 2);\n        const wallMaterial = new THREE.MeshBasicMaterial({\n          color: 0xffffff\n        });\n        const walls = new THREE.Mesh(wallGeometry, wallMaterial);\n        walls.position.set(xOffset, yOffset, zOffset);\n        const windowGeometry = new THREE.BoxGeometry(0.5, 0.7, 0.1);\n        const windowMaterial = new THREE.MeshBasicMaterial({\n          color: 0x444444\n        });\n        const windows = [{\n          x: -1,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 0,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 1,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: -1,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 0,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 1,\n          y: -1,\n          z: 1.01\n        }, {\n          x: -2,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: -2,\n          y: -1,\n          z: 1.01\n        }, {\n          x: +2,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: +2,\n          y: -1,\n          z: 1.01\n        }];\n        windows.forEach(pos => {\n          const windowMesh = new THREE.Mesh(windowGeometry, windowMaterial);\n          windowMesh.position.set(xOffset + pos.x, yOffset + pos.y, zOffset + pos.z);\n          building.add(windowMesh);\n        });\n        const stripGeometry = new THREE.BoxGeometry(5, 0.3, 2);\n        const stripMaterial = new THREE.MeshBasicMaterial({\n          color: 0x04192\n        });\n        const strip1 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip1.position.set(xOffset, yOffset + 1.5, zOffset);\n        const strip2 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip2.position.set(xOffset, yOffset - 0.2, zOffset);\n        building.add(walls);\n        building.add(strip1);\n        building.add(strip2);\n        return building;\n      }\n      const building1 = createBuilding(x, y, z);\n      const building2 = createBuilding(x + 1, y, z * 2);\n      scene.add(building1);\n      scene.add(building2);\n      schools.push(building1, building2);\n    }\n\n    // Create sun with rays\n    function createSun(x, y, z) {\n      const sunGroup = new THREE.Group();\n      const sunGeometry = new THREE.CircleGeometry(1, 32, 0, Math.PI);\n      const sunMaterial = new THREE.MeshBasicMaterial({\n        color: 0xFFFF00\n      });\n      const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n      sun.position.set(x, y, z);\n      sunGroup.add(sun);\n      const rayMaterial = new THREE.LineBasicMaterial({\n        color: 0xd34000\n      });\n      for (let i = 0; i <= Math.PI; i += Math.PI / 11) {\n        const rayGeometry = new THREE.BufferGeometry();\n        const vertices = new Float32Array([x + Math.cos(i) * 2, y + Math.sin(i) * 2, z, x + Math.cos(i) * 3, y + Math.sin(i) * 3, z]);\n        rayGeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        const ray = new THREE.Line(rayGeometry, rayMaterial);\n        sunGroup.add(ray);\n      }\n      scene.add(sunGroup);\n      logos.push(sunGroup);\n    }\n\n    // Initial setup\n    // createText(-5.5, 5, -5, \"Welcome to O-rang\", 1, 0xffffff);\n    // createText(-4.3, 2, -5, \"Hello I am Swati\", 1, 0xffffff);\n    // createText(-6.4, -3, -5, \"A passionate developer and tech enthusiast\", 0.5, 0xffffff);\n    // createText(-3, -4.2, -5, \"Let's move forward . .\", 0.5, 0xffffff);\n\n    createSchool(25, -3, -5);\n    // createText(30, -3, -5, \"Kendriya Vidyalaya Gorakhpur\", 0.5, 0x7B0000, \"/school\");\n    createSun(34.5, -2, -5);\n\n    // Event listener for window resize\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    // Animation function\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // Handle key press event\n    document.addEventListener('keydown', event => {\n      if (event.code === 'ArrowRight') {\n        moveElements(-3);\n      } else if (event.code === 'ArrowLeft') {\n        moveElements(3);\n      }\n    });\n\n    // Function to move elements\n    function moveElements(xDistance) {\n      // Move background elements\n      flowers.forEach(flower => {\n        flower.flowerStem.position.x -= xDistance;\n        flower.flowerPetal.position.x -= xDistance;\n      });\n      clouds.forEach(cloud => {\n        cloud.position.x -= xDistance;\n      });\n      textMeshes.forEach(textMesh => {\n        textMesh.position.x -= xDistance;\n      });\n      schools.forEach(school => {\n        school.position.x -= xDistance;\n      });\n      logos.forEach(logo => {\n        logo.position.x -= xDistance;\n      });\n\n      // Change the shape of the cube\n      cube.scale.x = 1 + Math.sin(xDistance) * 0.1;\n      cube.scale.y = 1 + Math.cos(xDistance) * 0.1;\n      cube.scale.z = 1 + Math.sin(xDistance) * 0.1;\n    }\n\n    // Cleanup\n    return () => {\n      // Clean up Three.js objects\n      scene.remove(cube);\n      flowers.forEach(flower => {\n        scene.remove(flower.flowerStem);\n        scene.remove(flower.flowerPetal);\n      });\n      clouds.forEach(cloud => {\n        scene.remove(cloud);\n      });\n      textMeshes.forEach(textMesh => {\n        scene.remove(textMesh);\n      });\n      schools.forEach(school => {\n        scene.remove(school);\n      });\n      logos.forEach(logo => {\n        scene.remove(logo);\n      });\n\n      // Dispose renderer\n      renderer.dispose();\n      containerRef.current.removeChild(renderer.domElement);\n    };\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","App","_s","containerRef","scene","camera","renderer","flowers","clouds","textMeshes","schools","logos","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","z","WebGLRenderer","setSize","current","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","createSchool","x","y","createBuilding","xOffset","yOffset","zOffset","building","Group","wallGeometry","wallMaterial","walls","set","windowGeometry","windowMaterial","windows","forEach","pos","windowMesh","stripGeometry","stripMaterial","strip1","strip2","building1","building2","push","createSun","sunGroup","sunGeometry","CircleGeometry","Math","PI","sunMaterial","sun","rayMaterial","LineBasicMaterial","i","rayGeometry","BufferGeometry","vertices","Float32Array","cos","sin","setAttribute","BufferAttribute","ray","Line","addEventListener","aspect","updateProjectionMatrix","animate","requestAnimationFrame","render","document","event","code","moveElements","xDistance","flower","flowerStem","flowerPetal","cloud","textMesh","school","logo","scale","remove","dispose","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/swati/Documents/Portfoilo/reactthree/src/components/app.js"],"sourcesContent":["import React, {useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport '../styles/app.css';\n\nconst App = () => {\n  const containerRef = useRef(null);\n  let scene, camera, renderer;\n  const flowers = [];\n  const clouds = [];\n  const textMeshes = [];\n  const schools = [];\n  const logos = [];\n\n  useEffect(() => {\n    // Scene\n    scene = new THREE.Scene();\n\n    // Camera\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    // camera.position.x =25;\n    // Renderer\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    // Create a cube\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    // Create flowers\n    // function createFlower(x, y, z) {\n    //   const flowerGeometry = new THREE.CylinderGeometry(0.1, 0.1, 1, 32);\n    //   const flowerMaterial = new THREE.MeshBasicMaterial({ color: 0x8B4513 });\n    //   const flowerStem = new THREE.Mesh(flowerGeometry, flowerMaterial);\n\n    //   const flowerPetalGeometry = new THREE.SphereGeometry(0.3, 32, 32);\n    //   const flowerPetalMaterial = new THREE.MeshBasicMaterial({ color: 0xFF69B4 });\n    //   const flowerPetal = new THREE.Mesh(flowerPetalGeometry, flowerPetalMaterial);\n\n    //   flowerStem.position.set(x, y, z);\n    //   flowerPetal.position.set(x, y + 0.6, z);\n\n    //   scene.add(flowerStem);\n    //   scene.add(flowerPetal);\n\n    //   flowers.push({ flowerStem, flowerPetal });\n    // }\n\n    // Create clouds\n    // function createCloud(x, y, z) {\n    //   const cloudGeometry = new THREE.SphereGeometry(1, 32, 32);\n    //   const cloudMaterial = new THREE.MeshBasicMaterial({ color: 0xFFFFFF });\n    //   const cloud = new THREE.Mesh(cloudGeometry, cloudMaterial);\n\n    //   cloud.position.set(x, y, z);\n    //   scene.add(cloud);\n\n    //   clouds.push(cloud);\n    // }\n\n    // Create text labels\n    // function createText(x, y, z, text, size, color, url) {\n    //   const loader = new THREE.FontLoader();\n    //   loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n    //     const textGeometry = new THREE.TextGeometry(text, {\n    //       font: font,\n    //       size: size,\n    //       height: 0.1,\n    //       curveSegments: 2,\n    //       bevelEnabled: false\n    //     });\n    //     const textMaterial = new THREE.MeshBasicMaterial({ color: color });\n    //     const mesh = new THREE.Mesh(textGeometry, textMaterial);\n    //     mesh.position.set(x, y, z);\n    //     mesh.castShadow = true;\n    //     mesh.userData.url = url;\n    //     scene.add(mesh);\n    //     textMeshes.push(mesh);\n    //   });\n    // }\n\n    // Create school buildings\n    function createSchool(x, y, z) {\n      function createBuilding(xOffset, yOffset, zOffset) {\n        const building = new THREE.Group();\n\n        const wallGeometry = new THREE.BoxGeometry(5, 5, 2);\n        const wallMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        const walls = new THREE.Mesh(wallGeometry, wallMaterial);\n        walls.position.set(xOffset, yOffset, zOffset);\n\n        const windowGeometry = new THREE.BoxGeometry(0.5, 0.7, 0.1);\n        const windowMaterial = new THREE.MeshBasicMaterial({ color: 0x444444 });\n        const windows = [\n          { x: -1, y: 0.8, z: 1.01 },\n          { x: 0, y: 0.8, z: 1.01 },\n          { x: 1, y: 0.8, z: 1.01 },\n          { x: -1, y: -1, z: 1.01 },\n          { x: 0, y: -1, z: 1.01 },\n          { x: 1, y: -1, z: 1.01 },\n          { x: -2, y: 0.8, z: 1.01 },\n          { x: -2, y: -1, z: 1.01 },\n          { x: +2, y: 0.8, z: 1.01 },\n          { x: +2, y: -1, z: 1.01 },\n        ];\n\n        windows.forEach((pos) => {\n          const windowMesh = new THREE.Mesh(windowGeometry, windowMaterial);\n          windowMesh.position.set(xOffset + pos.x, yOffset + pos.y, zOffset + pos.z);\n          building.add(windowMesh);\n        });\n\n        const stripGeometry = new THREE.BoxGeometry(5, 0.3, 2);\n        const stripMaterial = new THREE.MeshBasicMaterial({ color: 0x04192 });\n\n        const strip1 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip1.position.set(xOffset, yOffset + 1.5, zOffset);\n\n        const strip2 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip2.position.set(xOffset, yOffset - 0.2, zOffset);\n\n        building.add(walls);\n        building.add(strip1);\n        building.add(strip2);\n\n        return building;\n      }\n\n      const building1 = createBuilding(x, y, z);\n      const building2 = createBuilding(x + 1, y, z * 2);\n\n      scene.add(building1);\n      scene.add(building2);\n\n      schools.push(building1, building2);\n    }\n\n    // Create sun with rays\n    function createSun(x, y, z) {\n      const sunGroup = new THREE.Group();\n\n      const sunGeometry = new THREE.CircleGeometry(1, 32, 0, Math.PI);\n      const sunMaterial = new THREE.MeshBasicMaterial({ color: 0xFFFF00 });\n      const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n      sun.position.set(x, y, z);\n      sunGroup.add(sun);\n\n      const rayMaterial = new THREE.LineBasicMaterial({ color: 0xd34000 });\n\n      for (let i = 0; i <= Math.PI; i += Math.PI / 11) {\n        const rayGeometry = new THREE.BufferGeometry();\n        const vertices = new Float32Array([\n          x + Math.cos(i) * 2, y + Math.sin(i) * 2, z,\n          x + Math.cos(i) * 3, y + Math.sin(i) * 3, z\n        ]);\n        rayGeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        const ray = new THREE.Line(rayGeometry, rayMaterial);\n        sunGroup.add(ray);\n      }\n\n      scene.add(sunGroup);\n      logos.push(sunGroup);\n    }\n\n    // Initial setup\n    // createText(-5.5, 5, -5, \"Welcome to O-rang\", 1, 0xffffff);\n    // createText(-4.3, 2, -5, \"Hello I am Swati\", 1, 0xffffff);\n    // createText(-6.4, -3, -5, \"A passionate developer and tech enthusiast\", 0.5, 0xffffff);\n    // createText(-3, -4.2, -5, \"Let's move forward . .\", 0.5, 0xffffff);\n\n    createSchool(25, -3, -5);\n    // createText(30, -3, -5, \"Kendriya Vidyalaya Gorakhpur\", 0.5, 0x7B0000, \"/school\");\n    createSun(34.5, -2, -5);\n\n    // Event listener for window resize\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    // Animation function\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n\n    animate();\n\n    // Handle key press event\n    document.addEventListener('keydown', (event) => {\n      if (event.code === 'ArrowRight') {\n        moveElements(-3);\n      } else if (event.code === 'ArrowLeft') {\n        moveElements(3);\n      }\n    });\n\n    // Function to move elements\n    function moveElements(xDistance) {\n      // Move background elements\n      flowers.forEach(flower => {\n        flower.flowerStem.position.x -= xDistance;\n        flower.flowerPetal.position.x -= xDistance;\n      });\n      clouds.forEach(cloud => {\n        cloud.position.x -= xDistance;\n      });\n      textMeshes.forEach(textMesh => {\n        textMesh.position.x -= xDistance;\n      });\n      schools.forEach(school => {\n        school.position.x -= xDistance;\n      });\n      logos.forEach(logo => {\n        logo.position.x -= xDistance;\n      });\n\n      // Change the shape of the cube\n      cube.scale.x = 1 + Math.sin(xDistance) * 0.1;\n      cube.scale.y = 1 + Math.cos(xDistance) * 0.1;\n      cube.scale.z = 1 + Math.sin(xDistance) * 0.1;\n    }\n\n    // Cleanup\n    return () => {\n      // Clean up Three.js objects\n      scene.remove(cube);\n      flowers.forEach(flower => {\n        scene.remove(flower.flowerStem);\n        scene.remove(flower.flowerPetal);\n      });\n      clouds.forEach(cloud => {\n        scene.remove(cloud);\n      });\n      textMeshes.forEach(textMesh => {\n        scene.remove(textMesh);\n      });\n      schools.forEach(school => {\n        scene.remove(school);\n      });\n      logos.forEach(logo => {\n        scene.remove(logo);\n      });\n\n      // Dispose renderer\n      renderer.dispose();\n      containerRef.current.removeChild(renderer.domElement);\n    };\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  return <div ref={containerRef} />;\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}