{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport { useNavigate } from 'react-router-dom';\nconst ThreeScene = () => {\n  _s();\n  const navigate = useNavigate();\n  const scene = useRef(null);\n  const camera = useRef(null);\n  const renderer = useRef(null);\n  const cube = useRef(null);\n  const controls = useRef(null);\n  const notesDiv = useRef(null);\n  const checkpoints = [0, 5, 8, 12, 30, 33];\n  const notes = [\"Checkpoint 1: Move the right arrow key!\", \"1\", \"2\", \"3\", \"Checkpoint 2: Done Schooling from kendriya vidyalaya Sangathan, with lots of happy memories and Friends!\", \"Click to Enter in the school!\"];\n  let checkpointIndex = 0;\n  let xMovement = 0;\n  const xdistance = 3;\n  const textMeshes = [];\n  const schools = [];\n  const logos = [];\n  useEffect(() => {\n    const initScene = () => {\n      scene.current = new THREE.Scene();\n      camera.current = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      renderer.current = new THREE.WebGLRenderer();\n      renderer.current.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.current.domElement);\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({\n        color: 0xffffff\n      });\n      cube.current = new THREE.Mesh(geometry, material);\n      scene.current.add(cube.current);\n      controls.current = new OrbitControls(camera.current, renderer.current.domElement);\n      controls.current.enableDamping = true;\n      controls.current.dampingFactor = 0.25;\n      controls.current.screenSpacePanning = false;\n      controls.current.maxPolarAngle = Math.PI / 2;\n      camera.current.position.z = 5;\n\n      // const notesDiv = document.createElement('notes');\n      // notesDiv.style.position = 'absolute';\n      // notesDiv.style.textAlign = 'center';\n      // notesDiv.style.top = '30px';\n      // notesDiv.style.padding = '10px';\n      // notesDiv.style.border = '2px solid white';\n      // notesDiv.style.backgroundColor = 'black';\n      // notesDiv.style.zIndex = '1000';\n      // document.body.appendChild(notesDiv);\n\n      // Store the reference\n      // notesDiv.current = notesDiv;\n\n      notesDiv.current = document.createElement('div');\n      notesDiv.current.style.position = 'absolute';\n      notesDiv.current.style.textAlign = 'center';\n      notesDiv.current.style.top = '30px';\n      notesDiv.current.style.padding = '10px';\n      notesDiv.current.style.border = '2px solid white';\n      notesDiv.current.style.backgroundColor = 'black';\n      notesDiv.current.style.zIndex = '1000';\n      notesDiv.current.style.display = 'none';\n      document.body.appendChild(notesDiv.current);\n      document.addEventListener('mousedown', onDocumentMouseDown, false);\n      document.addEventListener('keydown', onKeyDown);\n      createText();\n      createSchools();\n      createSun();\n    };\n    const animate = () => {\n      if (!scene.current || !camera.current || !renderer.current) {\n        return;\n      }\n      const animationId = requestAnimationFrame(animate);\n      if (controls.current) {\n        controls.current.update();\n      }\n      if (cube.current) {\n        cube.current.rotation.z += 0.0005;\n        cube.current.rotation.y += 0.01;\n      }\n      renderer.current.render(scene.current, camera.current);\n      return () => {\n        cancelAnimationFrame(animationId);\n      };\n    };\n    const onKeyDown = event => {\n      if (event.code === 'ArrowRight') {\n        xMovement -= 3;\n        handleArrowRight();\n      } else if (event.code === 'ArrowLeft') {\n        xMovement += 3;\n        handleArrowLeft();\n      }\n    };\n    const handleArrowRight = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n      if (checkpointIndex < checkpoints.length && xMovement >= checkpoints[checkpointIndex]) {\n        // displayCheckpointNote();\n        if (notesDiv.current) {\n          notesDiv.current.innerText = notes[checkpointIndex];\n          notesDiv.current.style.display = 'block';\n          setTimeout(() => {\n            notesDiv.current.style.display = 'none';\n          }, 2000);\n        }\n        checkpointIndex++;\n      }\n      moveBackgroundElements(-xdistance);\n    };\n    const handleArrowLeft = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n      if (checkpointIndex > 0 && xMovement < checkpoints[checkpointIndex - 1] && checkpointIndex > 4) {\n        if (notesDiv.current) {\n          notesDiv.current.innerText = notes[checkpointIndex];\n          notesDiv.current.style.display = 'block';\n          setTimeout(() => {\n            notesDiv.current.style.display = 'none';\n          }, 2000);\n        }\n        checkpointIndex--;\n        // displayCheckpointNote();\n      }\n      moveBackgroundElements(xdistance);\n    };\n    const moveBackgroundElements = distance => {\n      textMeshes.forEach(textMesh => {\n        textMesh.position.x += distance;\n      });\n      schools.forEach(school => {\n        school.position.x += distance;\n      });\n      logos.forEach(logo => {\n        logo.position.x += distance;\n      });\n    };\n\n    // const displayCheckpointNote = () => {\n    //   if (notesDiv.current) {\n    //     notesDiv.current.innerText = notes[checkpointIndex];\n    //     notesDiv.current.style.display = 'block';\n    //     setTimeout(() => {\n    //       notesDiv.current.style.display = 'none';\n    //     }, 2000);\n    //   }\n    // };\n\n    const onDocumentMouseDown = event => {\n      event.preventDefault();\n      const raycaster = new THREE.Raycaster();\n      const mouse = new THREE.Vector2();\n      mouse.x = event.clientX / window.innerWidth * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n      raycaster.setFromCamera(mouse, camera.current);\n      const intersects = raycaster.intersectObjects(textMeshes);\n      if (intersects.length > 0) {\n        const intersectedObject = intersects[0].object;\n        if (intersectedObject.userData.url) {\n          navigate(intersectedObject.userData.url);\n        } else {\n          alert('Slide');\n        }\n      }\n    };\n    const handleResize = () => {\n      if (camera.current && renderer.current) {\n        camera.current.aspect = window.innerWidth / window.innerHeight;\n        camera.current.updateProjectionMatrix();\n        renderer.current.setSize(window.innerWidth, window.innerHeight);\n      }\n    };\n    initScene();\n    const cleanupAnimation = animate();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      if (cleanupAnimation) {\n        cleanupAnimation();\n      }\n      if (controls.current) {\n        controls.current.dispose();\n      }\n      if (renderer.current) {\n        renderer.current.dispose();\n      }\n      if (scene.current) {\n        scene.current.clear();\n      }\n      if (renderer.current && renderer.current.domElement) {\n        document.body.removeChild(renderer.current.domElement);\n      }\n      if (notesDiv.current) {\n        document.body.removeChild(notesDiv.current);\n      }\n      document.removeEventListener('mousedown', onDocumentMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Function to create text labels\n  const createText = () => {\n    const loader = new FontLoader();\n    loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n      const createTextMesh = (text, x, y, z, size, color, url) => {\n        const textGeometry = new TextGeometry(text, {\n          font: font,\n          size: size,\n          height: 0.1,\n          curveSegments: 2,\n          bevelEnabled: false\n        });\n        const textMaterial = new THREE.MeshBasicMaterial({\n          color: color\n        });\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n        textMesh.position.set(x, y, z);\n        textMesh.userData.url = url;\n        scene.current.add(textMesh);\n        textMeshes.push(textMesh);\n      };\n\n      // Example text labels\n      createTextMesh('Welcome to O-rang', -6, 5, -5, 1, 0xffffff);\n      createTextMesh(\"Hello, I'm Swati\", -4.3, 2, -5, 1, 0xffffff);\n      createTextMesh('A passionate developer and tech enthusiast', -6.4, -3, -5, 0.5, 0xffffff);\n      createTextMesh('Let\\'s move forward . . .', -3, -4.2, -5, 0.5, 0xffffff);\n      createTextMesh(\"Kendriya Vidyalaya Gorakhpur\", 30, -3, -5, .5, 0x7B0000, \"/school\");\n    });\n  };\n\n  // Function to create schools/buildings\n  const createSchools = () => {\n    function createSchool(x, y, z) {\n      // Function to create a building\n      function createBuilding(xOffset, yOffset, zOffset) {\n        const building = new THREE.Group();\n\n        // Create the walls\n        const wallGeometry = new THREE.BoxGeometry(5, 5, 1.5);\n        const wallMaterial = new THREE.MeshBasicMaterial({\n          color: 0xffffff\n        }); // White color\n        const walls = new THREE.Mesh(wallGeometry, wallMaterial);\n        walls.position.set(xOffset, yOffset, zOffset);\n\n        // Create windows\n        const windowGeometry = new THREE.BoxGeometry(0.5, 0.7, 0.1);\n        const windowMaterial = new THREE.MeshBasicMaterial({\n          color: 0x444444\n        });\n        const windows = [{\n          x: -1,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 0,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 1,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: -1,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 0,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 1,\n          y: -1,\n          z: 1.01\n        }, {\n          x: -2,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: -2,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 2,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 2,\n          y: -1,\n          z: 1.01\n        }];\n        windows.forEach(pos => {\n          const windowMesh = new THREE.Mesh(windowGeometry, windowMaterial);\n          windowMesh.position.set(xOffset + pos.x, yOffset + pos.y, zOffset + pos.z);\n          building.add(windowMesh);\n        });\n\n        // Create horizontal strips\n        const stripGeometry = new THREE.BoxGeometry(5, 0.3, 1.8);\n        const stripMaterial = new THREE.MeshBasicMaterial({\n          color: 0x04192\n        });\n        const strip1 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip1.position.set(xOffset, yOffset + 1.5, zOffset);\n        const strip2 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip2.position.set(xOffset, yOffset - 0.2, zOffset);\n\n        // Add components to the building group\n        building.add(walls);\n        building.add(strip1);\n        building.add(strip2);\n        return building;\n      }\n\n      // Create two buildings\n      const building1 = createBuilding(x, y, z);\n      const building2 = createBuilding(x, y + 1, z * 2);\n\n      // Add the buildings to the scene\n      scene.current.add(building1);\n      scene.current.add(building2);\n      schools.push(building1, building2);\n    }\n\n    // Example position\n    createSchool(25, -3, -5);\n  };\n\n  // Function to create the sun\n  const createSun = () => {\n    function createSun(x, y, z) {\n      const sunGroup = new THREE.Group();\n\n      // Create the sun (half circle)\n      const sunGeometry = new THREE.CircleGeometry(1, 32, 0, Math.PI);\n      const sunMaterial = new THREE.MeshBasicMaterial({\n        color: 0xFFFF00\n      }); // Yellow color\n      const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n      sun.position.set(x, y, z);\n      sunGroup.add(sun);\n\n      // Create rays\n      const rayMaterial = new THREE.LineBasicMaterial({\n        color: 0xd34000\n      }); // Yellow color\n      for (let i = 0; i <= Math.PI; i += Math.PI / 11) {\n        const rayGeometry = new THREE.BufferGeometry();\n        const vertices = new Float32Array([x + Math.cos(i) * 2, y + Math.sin(i) * 2, z, x + Math.cos(i) * 3, y + Math.sin(i) * 3, z]);\n        rayGeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        const ray = new THREE.Line(rayGeometry, rayMaterial);\n        sunGroup.add(ray);\n      }\n      // Add the sunGroup to the scene\n      scene.current.add(sunGroup);\n      logos.push(sunGroup);\n    }\n    createSun(34, -2, -5);\n  };\n  return null;\n};\n_s(ThreeScene, \"Jhb2DptXXY/dvVd4qyjYFrwqlgk=\", false, function () {\n  return [useNavigate];\n});\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["useEffect","useRef","THREE","OrbitControls","FontLoader","TextGeometry","useNavigate","ThreeScene","_s","navigate","scene","camera","renderer","cube","controls","notesDiv","checkpoints","notes","checkpointIndex","xMovement","xdistance","textMeshes","schools","logos","initScene","current","Scene","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","Mesh","add","enableDamping","dampingFactor","screenSpacePanning","maxPolarAngle","Math","PI","position","z","createElement","style","textAlign","top","padding","border","backgroundColor","zIndex","display","addEventListener","onDocumentMouseDown","onKeyDown","createText","createSchools","createSun","animate","animationId","requestAnimationFrame","update","rotation","y","render","cancelAnimationFrame","event","code","handleArrowRight","handleArrowLeft","scale","x","sin","cos","length","innerText","setTimeout","moveBackgroundElements","distance","forEach","textMesh","school","logo","preventDefault","raycaster","Raycaster","mouse","Vector2","clientX","clientY","setFromCamera","intersects","intersectObjects","intersectedObject","object","userData","url","alert","handleResize","aspect","updateProjectionMatrix","cleanupAnimation","dispose","clear","removeChild","removeEventListener","loader","load","font","createTextMesh","text","size","textGeometry","height","curveSegments","bevelEnabled","textMaterial","set","push","createSchool","createBuilding","xOffset","yOffset","zOffset","building","Group","wallGeometry","wallMaterial","walls","windowGeometry","windowMaterial","windows","pos","windowMesh","stripGeometry","stripMaterial","strip1","strip2","building1","building2","sunGroup","sunGeometry","CircleGeometry","sunMaterial","sun","rayMaterial","LineBasicMaterial","i","rayGeometry","BufferGeometry","vertices","Float32Array","setAttribute","BufferAttribute","ray","Line","_c","$RefreshReg$"],"sources":["/Users/swati/Documents/Portfoilo/reactthree/src/components/app.js"],"sourcesContent":["import  { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport { useNavigate } from 'react-router-dom';\n\nconst ThreeScene = () => {\n  const navigate = useNavigate();\n  const scene = useRef(null);\n  const camera = useRef(null);\n  const renderer = useRef(null);\n  const cube = useRef(null);\n  const controls = useRef(null);\n  const notesDiv = useRef(null);\n\n  const checkpoints = [0, 5, 8, 12, 30, 33];\n  const notes = [\n    \"Checkpoint 1: Move the right arrow key!\",\n    \"1\", \"2\", \"3\",\n    \"Checkpoint 2: Done Schooling from kendriya vidyalaya Sangathan, with lots of happy memories and Friends!\",\n    \"Click to Enter in the school!\"\n  ];\n\n  let checkpointIndex = 0;\n  let xMovement = 0;\n  const xdistance = 3;\n \n  const textMeshes = [];\n  const schools = [];\n  const logos = [];\n\n  useEffect(() => {\n    const initScene = () => {\n      scene.current = new THREE.Scene();\n      camera.current = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      renderer.current = new THREE.WebGLRenderer();\n      renderer.current.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.current.domElement);\n\n      const geometry = new THREE.BoxGeometry();\n      const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n      cube.current = new THREE.Mesh(geometry, material);\n      scene.current.add(cube.current);\n      \n\n      controls.current = new OrbitControls(camera.current, renderer.current.domElement);\n      controls.current.enableDamping = true;\n      controls.current.dampingFactor = 0.25;\n      controls.current.screenSpacePanning = false;\n      controls.current.maxPolarAngle = Math.PI / 2;\n\n      camera.current.position.z = 5;\n\n      // const notesDiv = document.createElement('notes');\n      // notesDiv.style.position = 'absolute';\n      // notesDiv.style.textAlign = 'center';\n      // notesDiv.style.top = '30px';\n      // notesDiv.style.padding = '10px';\n      // notesDiv.style.border = '2px solid white';\n      // notesDiv.style.backgroundColor = 'black';\n      // notesDiv.style.zIndex = '1000';\n      // document.body.appendChild(notesDiv);\n\n      // Store the reference\n      // notesDiv.current = notesDiv;\n\n      notesDiv.current = document.createElement('div');\n      notesDiv.current.style.position = 'absolute';\n      notesDiv.current.style.textAlign = 'center';\n      notesDiv.current.style.top = '30px';\n      notesDiv.current.style.padding = '10px';\n      notesDiv.current.style.border = '2px solid white';\n      notesDiv.current.style.backgroundColor = 'black';\n      notesDiv.current.style.zIndex = '1000';\n      notesDiv.current.style.display = 'none';\n      document.body.appendChild(notesDiv.current);\n      document.addEventListener('mousedown', onDocumentMouseDown, false);\n      document.addEventListener('keydown', onKeyDown);\n      \n      createText();\n      createSchools();\n      createSun();\n    };\n\n    const animate = () => {\n      if (!scene.current || !camera.current || !renderer.current) {\n        return;\n      }\n\n      const animationId = requestAnimationFrame(animate);\n\n      if (controls.current) {\n        controls.current.update();\n      }\n\n      if (cube.current) {\n        cube.current.rotation.z += 0.0005;\n        cube.current.rotation.y += 0.01;\n      }\n\n      renderer.current.render(scene.current, camera.current);\n\n      return () => {\n        cancelAnimationFrame(animationId);\n      };\n    };\n\n    const onKeyDown = (event) => {\n      if (event.code === 'ArrowRight') {\n        xMovement -= 3;\n        handleArrowRight();\n      } else if (event.code === 'ArrowLeft') {\n        xMovement += 3;\n        handleArrowLeft();\n      }\n    };\n    \n    const handleArrowRight = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n\n      if (checkpointIndex < checkpoints.length && xMovement >= checkpoints[checkpointIndex]) {\n        // displayCheckpointNote();\n        if (notesDiv.current) {\n          notesDiv.current.innerText = notes[checkpointIndex];\n          notesDiv.current.style.display = 'block';\n          setTimeout(() => {\n            notesDiv.current.style.display = 'none';\n          }, 2000);\n        }\n        checkpointIndex++;\n      }\n\n      moveBackgroundElements(-xdistance);\n    };\n\n    const handleArrowLeft = () => {\n      if (cube.current) {\n        cube.current.scale.x = 1 + Math.sin(xMovement) * 0.1;\n        cube.current.scale.y = 1 + Math.cos(xMovement) * 0.1;\n        cube.current.scale.z = 1 + Math.sin(xMovement) * 0.1;\n      }\n\n      if (checkpointIndex > 0 && xMovement < checkpoints[checkpointIndex - 1] && checkpointIndex > 4) {\n        if (notesDiv.current) {\n          notesDiv.current.innerText = notes[checkpointIndex];\n          notesDiv.current.style.display = 'block';\n          setTimeout(() => {\n            notesDiv.current.style.display = 'none';\n          }, 2000);\n        }\n        checkpointIndex--;\n        // displayCheckpointNote();\n      }\n\n      moveBackgroundElements(xdistance);\n    };\n\n    const moveBackgroundElements = (distance) => {\n      textMeshes.forEach(textMesh => {\n        textMesh.position.x += distance;\n      });\n      schools.forEach(school => {\n        school.position.x += distance;\n      });\n\n      logos.forEach(logo=>{\n        logo.position.x +=distance;\n      })\n    };\n\n    // const displayCheckpointNote = () => {\n    //   if (notesDiv.current) {\n    //     notesDiv.current.innerText = notes[checkpointIndex];\n    //     notesDiv.current.style.display = 'block';\n    //     setTimeout(() => {\n    //       notesDiv.current.style.display = 'none';\n    //     }, 2000);\n    //   }\n    // };\n\n    const onDocumentMouseDown = (event) => {\n      event.preventDefault();\n\n      const raycaster = new THREE.Raycaster();\n      const mouse = new THREE.Vector2();\n\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n      raycaster.setFromCamera(mouse, camera.current);\n\n      const intersects = raycaster.intersectObjects(textMeshes);\n      if (intersects.length > 0) {\n        const intersectedObject = intersects[0].object;\n        if (intersectedObject.userData.url) {\n          navigate(intersectedObject.userData.url);\n        }\n        else{\n          alert('Slide');\n        }\n      }\n    };\n\n    const handleResize = () => {\n      if (camera.current && renderer.current) {\n        camera.current.aspect = window.innerWidth / window.innerHeight;\n        camera.current.updateProjectionMatrix();\n        renderer.current.setSize(window.innerWidth, window.innerHeight);\n      }\n    };\n\n    initScene();\n    const cleanupAnimation = animate();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      if (cleanupAnimation) {\n        cleanupAnimation();\n      }\n      if (controls.current) {\n        controls.current.dispose();\n      }\n      if (renderer.current) {\n        renderer.current.dispose();\n      }\n      if (scene.current) {\n        scene.current.clear();\n      }\n      if (renderer.current && renderer.current.domElement) {\n        document.body.removeChild(renderer.current.domElement);\n      }\n      if (notesDiv.current) {\n        document.body.removeChild(notesDiv.current);\n      }\n      document.removeEventListener('mousedown', onDocumentMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Function to create text labels\n  const createText = () => {\n    const loader = new FontLoader();\n    loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n      const createTextMesh = (text, x, y, z, size, color,url) => {\n        const textGeometry = new TextGeometry(text, {\n          font: font,\n          size: size,\n          height: 0.1,\n          curveSegments: 2,\n          bevelEnabled: false\n        });\n        const textMaterial = new THREE.MeshBasicMaterial({ color: color });\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n        textMesh.position.set(x, y, z);\n        textMesh.userData.url = url;\n        scene.current.add(textMesh);\n        textMeshes.push(textMesh);\n      };\n\n      // Example text labels\n      createTextMesh('Welcome to O-rang', -6, 5, -5, 1, 0xffffff);\n      createTextMesh(\"Hello, I'm Swati\", -4.3, 2, -5, 1, 0xffffff);\n      createTextMesh('A passionate developer and tech enthusiast', -6.4, -3, -5, 0.5, 0xffffff);\n      createTextMesh('Let\\'s move forward . . .', -3, -4.2, -5, 0.5, 0xffffff);\n      createTextMesh(\"Kendriya Vidyalaya Gorakhpur\",  30, -3, -5,  .5, 0x7B0000, \"/school\");\n    });\n  };\n\n  // Function to create schools/buildings\n  const createSchools = () => {\n    function createSchool(x, y, z) {\n      // Function to create a building\n      function createBuilding(xOffset, yOffset, zOffset) {\n        const building = new THREE.Group();\n\n        // Create the walls\n        const wallGeometry = new THREE.BoxGeometry(5, 5, 1.5);\n        const wallMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff }); // White color\n        const walls = new THREE.Mesh(wallGeometry, wallMaterial);\n        walls.position.set(xOffset, yOffset, zOffset);\n\n        // Create windows\n        const windowGeometry = new THREE.BoxGeometry(0.5, 0.7, 0.1);\n        const windowMaterial = new THREE.MeshBasicMaterial({ color: 0x444444 });\n        const windows = [\n          { x: -1, y: 0.8, z: 1.01 },\n          { x: 0, y: 0.8, z: 1.01 },\n          { x: 1, y: 0.8, z: 1.01 },\n          { x: -1, y: -1, z: 1.01 },\n          { x: 0, y: -1, z: 1.01 },\n          { x: 1, y: -1, z: 1.01 },\n          { x: -2, y: 0.8, z: 1.01 },\n          { x: -2, y: -1, z: 1.01 },\n          { x: 2, y: 0.8, z: 1.01 },\n          { x: 2, y: -1, z: 1.01 },\n        ];\n\n        windows.forEach((pos) => {\n          const windowMesh = new THREE.Mesh(windowGeometry, windowMaterial);\n          windowMesh.position.set(xOffset + pos.x, yOffset + pos.y, zOffset + pos.z);\n          building.add(windowMesh);\n        });\n\n        // Create horizontal strips\n        const stripGeometry = new THREE.BoxGeometry(5, 0.3, 1.8);\n        const stripMaterial = new THREE.MeshBasicMaterial({ color: 0x04192 });\n\n        const strip1 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip1.position.set(xOffset, yOffset + 1.5, zOffset);\n\n        const strip2 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip2.position.set(xOffset, yOffset - 0.2, zOffset);\n\n        // Add components to the building group\n        building.add(walls);\n        building.add(strip1);\n        building.add(strip2);\n\n        return building;\n      }\n\n      // Create two buildings\n      const building1 = createBuilding(x, y, z);\n      const building2 = createBuilding(x , y +1 , z*2);\n\n      // Add the buildings to the scene\n      scene.current.add(building1);\n      scene.current.add(building2);\n\n      schools.push(building1, building2);\n    }\n\n    // Example position\n    createSchool(25, -3, -5);\n  };\n\n  // Function to create the sun\n  const createSun = () => {\n    function createSun(x,y,z){\n      const sunGroup = new THREE.Group();\n\n      // Create the sun (half circle)\n      const sunGeometry = new THREE.CircleGeometry(1, 32, 0, Math.PI);\n      const sunMaterial = new THREE.MeshBasicMaterial({ color: 0xFFFF00 }); // Yellow color\n      const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n      sun.position.set(x,y,z);\n      sunGroup.add(sun);\n\n      // Create rays\n      const rayMaterial = new THREE.LineBasicMaterial({ color: 0xd34000 }); // Yellow color\n      for (let i = 0; i <= Math.PI; i += Math.PI / 11) {\n        const rayGeometry = new THREE.BufferGeometry();\n        const vertices = new Float32Array([\n          x+Math.cos(i) * 2, y+Math.sin(i) * 2, z,\n          x+Math.cos(i) * 3, y+Math.sin(i) * 3, z\n        ]);\n        rayGeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        const ray = new THREE.Line(rayGeometry, rayMaterial);\n        sunGroup.add(ray);\n      }\n      // Add the sunGroup to the scene\n      scene.current.add(sunGroup);\n      logos.push(sunGroup);\n    }\n    createSun(34,-2,-5);\n  };\n\n  return null;\n};\n\nexport default ThreeScene;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}