{"ast":null,"code":"var _jsxFileName = \"/Users/swati/Documents/Portfoilo/reactthree/src/components/app.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport '../styles/app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const containerRef = useRef(null);\n  let scene, camera, renderer;\n  const flowers = [];\n  const clouds = [];\n  const textMeshes = [];\n  const schools = [];\n  const logos = [];\n  useEffect(() => {\n    // Scene\n    scene = new THREE.Scene();\n\n    // Camera\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Renderer\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    // Create a cube\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffffff\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    // Create flowers\n    function createFlower(x, y, z) {\n      const flowerGeometry = new THREE.CylinderGeometry(0.1, 0.1, 1, 32);\n      const flowerMaterial = new THREE.MeshBasicMaterial({\n        color: 0x8B4513\n      });\n      const flowerStem = new THREE.Mesh(flowerGeometry, flowerMaterial);\n      const flowerPetalGeometry = new THREE.SphereGeometry(0.3, 32, 32);\n      const flowerPetalMaterial = new THREE.MeshBasicMaterial({\n        color: 0xFF69B4\n      });\n      const flowerPetal = new THREE.Mesh(flowerPetalGeometry, flowerPetalMaterial);\n      flowerStem.position.set(x, y, z);\n      flowerPetal.position.set(x, y + 0.6, z);\n      scene.add(flowerStem);\n      scene.add(flowerPetal);\n      flowers.push({\n        flowerStem,\n        flowerPetal\n      });\n    }\n\n    // Create clouds\n    function createCloud(x, y, z) {\n      const cloudGeometry = new THREE.SphereGeometry(1, 32, 32);\n      const cloudMaterial = new THREE.MeshBasicMaterial({\n        color: 0xFFFFFF\n      });\n      const cloud = new THREE.Mesh(cloudGeometry, cloudMaterial);\n      cloud.position.set(x, y, z);\n      scene.add(cloud);\n      clouds.push(cloud);\n    }\n\n    // Create text labels\n    // function createText(x, y, z, text, size, color, url) {\n    //   const loader = new THREE.FontLoader();\n    //   loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n    //     const textGeometry = new THREE.TextGeometry(text, {\n    //       font: font,\n    //       size: size,\n    //       height: 0.1,\n    //       curveSegments: 2,\n    //       bevelEnabled: false\n    //     });\n    //     const textMaterial = new THREE.MeshBasicMaterial({ color: color });\n    //     const mesh = new THREE.Mesh(textGeometry, textMaterial);\n    //     mesh.position.set(x, y, z);\n    //     mesh.castShadow = true;\n    //     mesh.userData.url = url;\n    //     scene.add(mesh);\n    //     textMeshes.push(mesh);\n    //   });\n    // }\n\n    // Create school buildings\n    function createSchool(x, y, z) {\n      function createBuilding(xOffset, yOffset, zOffset) {\n        const building = new THREE.Group();\n        const wallGeometry = new THREE.BoxGeometry(5, 5, 2);\n        const wallMaterial = new THREE.MeshBasicMaterial({\n          color: 0xffffff\n        });\n        const walls = new THREE.Mesh(wallGeometry, wallMaterial);\n        walls.position.set(xOffset, yOffset, zOffset);\n        const windowGeometry = new THREE.BoxGeometry(0.5, 0.7, 0.1);\n        const windowMaterial = new THREE.MeshBasicMaterial({\n          color: 0x444444\n        });\n        const windows = [{\n          x: -1,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 0,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: 1,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: -1,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 0,\n          y: -1,\n          z: 1.01\n        }, {\n          x: 1,\n          y: -1,\n          z: 1.01\n        }, {\n          x: -2,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: -2,\n          y: -1,\n          z: 1.01\n        }, {\n          x: +2,\n          y: 0.8,\n          z: 1.01\n        }, {\n          x: +2,\n          y: -1,\n          z: 1.01\n        }];\n        windows.forEach(pos => {\n          const windowMesh = new THREE.Mesh(windowGeometry, windowMaterial);\n          windowMesh.position.set(xOffset + pos.x, yOffset + pos.y, zOffset + pos.z);\n          building.add(windowMesh);\n        });\n        const stripGeometry = new THREE.BoxGeometry(5, 0.3, 2);\n        const stripMaterial = new THREE.MeshBasicMaterial({\n          color: 0x04192\n        });\n        const strip1 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip1.position.set(xOffset, yOffset + 1.5, zOffset);\n        const strip2 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip2.position.set(xOffset, yOffset - 0.2, zOffset);\n        building.add(walls);\n        building.add(strip1);\n        building.add(strip2);\n        return building;\n      }\n      const building1 = createBuilding(x, y, z);\n      const building2 = createBuilding(x + 1, y, z * 2);\n      scene.add(building1);\n      scene.add(building2);\n      schools.push(building1, building2);\n    }\n\n    // Create sun with rays\n    function createSun(x, y, z) {\n      const sunGroup = new THREE.Group();\n      const sunGeometry = new THREE.CircleGeometry(1, 32, 0, Math.PI);\n      const sunMaterial = new THREE.MeshBasicMaterial({\n        color: 0xFFFF00\n      });\n      const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n      sun.position.set(x, y, z);\n      sunGroup.add(sun);\n      const rayMaterial = new THREE.LineBasicMaterial({\n        color: 0xd34000\n      });\n      for (let i = 0; i <= Math.PI; i += Math.PI / 11) {\n        const rayGeometry = new THREE.BufferGeometry();\n        const vertices = new Float32Array([x + Math.cos(i) * 2, y + Math.sin(i) * 2, z, x + Math.cos(i) * 3, y + Math.sin(i) * 3, z]);\n        rayGeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        const ray = new THREE.Line(rayGeometry, rayMaterial);\n        sunGroup.add(ray);\n      }\n      scene.add(sunGroup);\n      logos.push(sunGroup);\n    }\n\n    // Initial setup\n    createText(-5.5, 5, -5, \"Welcome to O-rang\", 1, 0xffffff);\n    createText(-4.3, 2, -5, \"Hello I am Swati\", 1, 0xffffff);\n    createText(-6.4, -3, -5, \"A passionate developer and tech enthusiast\", 0.5, 0xffffff);\n    createText(-3, -4.2, -5, \"Let's move forward . .\", 0.5, 0xffffff);\n    createSchool(25, -3, -5);\n    // createText(30, -3, -5, \"Kendriya Vidyalaya Gorakhpur\", 0.5, 0x7B0000, \"/school\");\n    createSun(34.5, -2, -5);\n\n    // Event listener for window resize\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    // Animation function\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // Handle key press event\n    document.addEventListener('keydown', event => {\n      if (event.code === 'ArrowRight') {\n        moveElements(-3);\n      } else if (event.code === 'ArrowLeft') {\n        moveElements(3);\n      }\n    });\n\n    // Function to move elements\n    function moveElements(xDistance) {\n      // Move background elements\n      flowers.forEach(flower => {\n        flower.flowerStem.position.x -= xDistance;\n        flower.flowerPetal.position.x -= xDistance;\n      });\n      clouds.forEach(cloud => {\n        cloud.position.x -= xDistance;\n      });\n      textMeshes.forEach(textMesh => {\n        textMesh.position.x -= xDistance;\n      });\n      schools.forEach(school => {\n        school.position.x -= xDistance;\n      });\n      logos.forEach(logo => {\n        logo.position.x -= xDistance;\n      });\n\n      // Change the shape of the cube\n      cube.scale.x = 1 + Math.sin(xDistance) * 0.1;\n      cube.scale.y = 1 + Math.cos(xDistance) * 0.1;\n      cube.scale.z = 1 + Math.sin(xDistance) * 0.1;\n    }\n\n    // Cleanup\n    return () => {\n      // Clean up Three.js objects\n      scene.remove(cube);\n      flowers.forEach(flower => {\n        scene.remove(flower.flowerStem);\n        scene.remove(flower.flowerPetal);\n      });\n      clouds.forEach(cloud => {\n        scene.remove(cloud);\n      });\n      textMeshes.forEach(textMesh => {\n        scene.remove(textMesh);\n      });\n      schools.forEach(school => {\n        scene.remove(school);\n      });\n      logos.forEach(logo => {\n        scene.remove(logo);\n      });\n\n      // Dispose renderer\n      renderer.dispose();\n      containerRef.current.removeChild(renderer.domElement);\n    };\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","App","_s","containerRef","scene","camera","renderer","flowers","clouds","textMeshes","schools","logos","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","z","WebGLRenderer","setSize","current","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","createFlower","x","y","flowerGeometry","CylinderGeometry","flowerMaterial","flowerStem","flowerPetalGeometry","SphereGeometry","flowerPetalMaterial","flowerPetal","set","push","createCloud","cloudGeometry","cloudMaterial","cloud","createSchool","createBuilding","xOffset","yOffset","zOffset","building","Group","wallGeometry","wallMaterial","walls","windowGeometry","windowMaterial","windows","forEach","pos","windowMesh","stripGeometry","stripMaterial","strip1","strip2","building1","building2","createSun","sunGroup","sunGeometry","CircleGeometry","Math","PI","sunMaterial","sun","rayMaterial","LineBasicMaterial","i","rayGeometry","BufferGeometry","vertices","Float32Array","cos","sin","setAttribute","BufferAttribute","ray","Line","createText","addEventListener","aspect","updateProjectionMatrix","animate","requestAnimationFrame","render","document","event","code","moveElements","xDistance","flower","textMesh","school","logo","scale","remove","dispose","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/swati/Documents/Portfoilo/reactthree/src/components/app.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport '../styles/app.css';\n\nconst App = () => {\n  const containerRef = useRef(null);\n  let scene, camera, renderer;\n  const flowers = [];\n  const clouds = [];\n  const textMeshes = [];\n  const schools = [];\n  const logos = [];\n\n  useEffect(() => {\n    // Scene\n    scene = new THREE.Scene();\n\n    // Camera\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Renderer\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    containerRef.current.appendChild(renderer.domElement);\n\n    // Create a cube\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    // Create flowers\n    function createFlower(x, y, z) {\n      const flowerGeometry = new THREE.CylinderGeometry(0.1, 0.1, 1, 32);\n      const flowerMaterial = new THREE.MeshBasicMaterial({ color: 0x8B4513 });\n      const flowerStem = new THREE.Mesh(flowerGeometry, flowerMaterial);\n\n      const flowerPetalGeometry = new THREE.SphereGeometry(0.3, 32, 32);\n      const flowerPetalMaterial = new THREE.MeshBasicMaterial({ color: 0xFF69B4 });\n      const flowerPetal = new THREE.Mesh(flowerPetalGeometry, flowerPetalMaterial);\n\n      flowerStem.position.set(x, y, z);\n      flowerPetal.position.set(x, y + 0.6, z);\n\n      scene.add(flowerStem);\n      scene.add(flowerPetal);\n\n      flowers.push({ flowerStem, flowerPetal });\n    }\n\n    // Create clouds\n    function createCloud(x, y, z) {\n      const cloudGeometry = new THREE.SphereGeometry(1, 32, 32);\n      const cloudMaterial = new THREE.MeshBasicMaterial({ color: 0xFFFFFF });\n      const cloud = new THREE.Mesh(cloudGeometry, cloudMaterial);\n\n      cloud.position.set(x, y, z);\n      scene.add(cloud);\n\n      clouds.push(cloud);\n    }\n\n    // Create text labels\n    // function createText(x, y, z, text, size, color, url) {\n    //   const loader = new THREE.FontLoader();\n    //   loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', function (font) {\n    //     const textGeometry = new THREE.TextGeometry(text, {\n    //       font: font,\n    //       size: size,\n    //       height: 0.1,\n    //       curveSegments: 2,\n    //       bevelEnabled: false\n    //     });\n    //     const textMaterial = new THREE.MeshBasicMaterial({ color: color });\n    //     const mesh = new THREE.Mesh(textGeometry, textMaterial);\n    //     mesh.position.set(x, y, z);\n    //     mesh.castShadow = true;\n    //     mesh.userData.url = url;\n    //     scene.add(mesh);\n    //     textMeshes.push(mesh);\n    //   });\n    // }\n\n    // Create school buildings\n    function createSchool(x, y, z) {\n      function createBuilding(xOffset, yOffset, zOffset) {\n        const building = new THREE.Group();\n\n        const wallGeometry = new THREE.BoxGeometry(5, 5, 2);\n        const wallMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        const walls = new THREE.Mesh(wallGeometry, wallMaterial);\n        walls.position.set(xOffset, yOffset, zOffset);\n\n        const windowGeometry = new THREE.BoxGeometry(0.5, 0.7, 0.1);\n        const windowMaterial = new THREE.MeshBasicMaterial({ color: 0x444444 });\n        const windows = [\n          { x: -1, y: 0.8, z: 1.01 },\n          { x: 0, y: 0.8, z: 1.01 },\n          { x: 1, y: 0.8, z: 1.01 },\n          { x: -1, y: -1, z: 1.01 },\n          { x: 0, y: -1, z: 1.01 },\n          { x: 1, y: -1, z: 1.01 },\n          { x: -2, y: 0.8, z: 1.01 },\n          { x: -2, y: -1, z: 1.01 },\n          { x: +2, y: 0.8, z: 1.01 },\n          { x: +2, y: -1, z: 1.01 },\n        ];\n\n        windows.forEach((pos) => {\n          const windowMesh = new THREE.Mesh(windowGeometry, windowMaterial);\n          windowMesh.position.set(xOffset + pos.x, yOffset + pos.y, zOffset + pos.z);\n          building.add(windowMesh);\n        });\n\n        const stripGeometry = new THREE.BoxGeometry(5, 0.3, 2);\n        const stripMaterial = new THREE.MeshBasicMaterial({ color: 0x04192 });\n\n        const strip1 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip1.position.set(xOffset, yOffset + 1.5, zOffset);\n\n        const strip2 = new THREE.Mesh(stripGeometry, stripMaterial);\n        strip2.position.set(xOffset, yOffset - 0.2, zOffset);\n\n        building.add(walls);\n        building.add(strip1);\n        building.add(strip2);\n\n        return building;\n      }\n\n      const building1 = createBuilding(x, y, z);\n      const building2 = createBuilding(x + 1, y, z * 2);\n\n      scene.add(building1);\n      scene.add(building2);\n\n      schools.push(building1, building2);\n    }\n\n    // Create sun with rays\n    function createSun(x, y, z) {\n      const sunGroup = new THREE.Group();\n\n      const sunGeometry = new THREE.CircleGeometry(1, 32, 0, Math.PI);\n      const sunMaterial = new THREE.MeshBasicMaterial({ color: 0xFFFF00 });\n      const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n      sun.position.set(x, y, z);\n      sunGroup.add(sun);\n\n      const rayMaterial = new THREE.LineBasicMaterial({ color: 0xd34000 });\n\n      for (let i = 0; i <= Math.PI; i += Math.PI / 11) {\n        const rayGeometry = new THREE.BufferGeometry();\n        const vertices = new Float32Array([\n          x + Math.cos(i) * 2, y + Math.sin(i) * 2, z,\n          x + Math.cos(i) * 3, y + Math.sin(i) * 3, z\n        ]);\n        rayGeometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        const ray = new THREE.Line(rayGeometry, rayMaterial);\n        sunGroup.add(ray);\n      }\n\n      scene.add(sunGroup);\n      logos.push(sunGroup);\n    }\n\n    // Initial setup\n    createText(-5.5, 5, -5, \"Welcome to O-rang\", 1, 0xffffff);\n    createText(-4.3, 2, -5, \"Hello I am Swati\", 1, 0xffffff);\n    createText(-6.4, -3, -5, \"A passionate developer and tech enthusiast\", 0.5, 0xffffff);\n    createText(-3, -4.2, -5, \"Let's move forward . .\", 0.5, 0xffffff);\n\n    createSchool(25, -3, -5);\n    // createText(30, -3, -5, \"Kendriya Vidyalaya Gorakhpur\", 0.5, 0x7B0000, \"/school\");\n    createSun(34.5, -2, -5);\n\n    // Event listener for window resize\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    // Animation function\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n\n    animate();\n\n    // Handle key press event\n    document.addEventListener('keydown', (event) => {\n      if (event.code === 'ArrowRight') {\n        moveElements(-3);\n      } else if (event.code === 'ArrowLeft') {\n        moveElements(3);\n      }\n    });\n\n    // Function to move elements\n    function moveElements(xDistance) {\n      // Move background elements\n      flowers.forEach(flower => {\n        flower.flowerStem.position.x -= xDistance;\n        flower.flowerPetal.position.x -= xDistance;\n      });\n      clouds.forEach(cloud => {\n        cloud.position.x -= xDistance;\n      });\n      textMeshes.forEach(textMesh => {\n        textMesh.position.x -= xDistance;\n      });\n      schools.forEach(school => {\n        school.position.x -= xDistance;\n      });\n      logos.forEach(logo => {\n        logo.position.x -= xDistance;\n      });\n\n      // Change the shape of the cube\n      cube.scale.x = 1 + Math.sin(xDistance) * 0.1;\n      cube.scale.y = 1 + Math.cos(xDistance) * 0.1;\n      cube.scale.z = 1 + Math.sin(xDistance) * 0.1;\n    }\n\n    // Cleanup\n    return () => {\n      // Clean up Three.js objects\n      scene.remove(cube);\n      flowers.forEach(flower => {\n        scene.remove(flower.flowerStem);\n        scene.remove(flower.flowerPetal);\n      });\n      clouds.forEach(cloud => {\n        scene.remove(cloud);\n      });\n      textMeshes.forEach(textMesh => {\n        scene.remove(textMesh);\n      });\n      schools.forEach(school => {\n        scene.remove(school);\n      });\n      logos.forEach(logo => {\n        scene.remove(logo);\n      });\n\n      // Dispose renderer\n      renderer.dispose();\n      containerRef.current.removeChild(renderer.domElement);\n    };\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  return <div ref={containerRef} />;\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}